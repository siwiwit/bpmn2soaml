<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="infrastructureLibrary"
    nsURI="http:///infrastructureLibrary.ecore" nsPrefix="infrastructureLibrary">
  <eSubpackages name="core" nsURI="http:///infrastructureLibrary/core.ecore" nsPrefix="infrastructureLibrary.core">
    <eSubpackages name="abstractions" nsURI="http:///infrastructureLibrary/core/abstractions.ecore"
        nsPrefix="infrastructureLibrary.core.abstractions">
      <eSubpackages name="ownerships" nsURI="http:///infrastructureLibrary/core/abstractions/ownerships.ecore"
          nsPrefix="infrastructureLibrary.core.abstractions.ownerships">
        <eClassifiers xsi:type="ecore:EClass" name="Element" abstract="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="An element is a constituent of a model. As such, it has the capability of owning other elements."/>
          </eAnnotations>
          <eOperations name="notOwnSelf" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="not self.allOwnedElements()->includes(self)"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="An element may not directly or indirectly own itself.&#xA;not self.allOwnedElements()->includes(self)"/>
            </eAnnotations>
            <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
              </eAnnotations>
            </eParameters>
            <eParameters name="context">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="documentation" value="The cache of context-specific information."/>
              </eAnnotations>
              <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
                <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
                <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eGenericType>
            </eParameters>
          </eOperations>
          <eOperations name="hasOwner" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="self.mustBeOwned() implies owner->notEmpty()"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="Elements that must be owned must have an owner.&#xA;self.mustBeOwned() implies owner->notEmpty()"/>
            </eAnnotations>
            <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
              </eAnnotations>
            </eParameters>
            <eParameters name="context">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="documentation" value="The cache of context-specific information."/>
              </eAnnotations>
              <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
                <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
                <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eGenericType>
            </eParameters>
          </eOperations>
          <eOperations name="allOwnedElements" ordered="false" upperBound="-1" eType="#//core/abstractions/ownerships/Element">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The query allOwnedElements() gives all of the direct and indirect owned elements of an element.&#xA;result = ownedElement->union(ownedElement->collect(e | e.allOwnedElements()))"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="result = ownedElement->union(ownedElement->collect(e | e.allOwnedElements()))"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="mustBeOwned" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/Boolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The query mustBeOwned() indicates whether elements of this type must have an owner. Subclasses of Element that do not require an owner must override this operation.&#xA;result = true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="result = true"/>
            </eAnnotations>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ownedElement" ordered="false"
              upperBound="-1" eType="#//core/abstractions/ownerships/Element" changeable="false"
              volatile="true" derived="true" eOpposite="#//core/abstractions/ownerships/Element/owner">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The Elements owned by this element."/>
            </eAnnotations>
            <eAnnotations source="union"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="owner" ordered="false"
              eType="#//core/abstractions/ownerships/Element" changeable="false" volatile="true"
              derived="true" eOpposite="#//core/abstractions/ownerships/Element/ownedElement">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The Element that owns this element."/>
            </eAnnotations>
            <eAnnotations source="union"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ownedComment" ordered="false"
              upperBound="-1" eType="#//core/abstractions/comments/Comment" containment="true">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The Comments owned by this element."/>
            </eAnnotations>
            <eAnnotations source="subsets" references="#//core/abstractions/ownerships/Element/ownedElement"/>
          </eStructuralFeatures>
        </eClassifiers>
      </eSubpackages>
      <eSubpackages name="comments" nsURI="http:///infrastructureLibrary/core/abstractions/comments.ecore"
          nsPrefix="infrastructureLibrary.core.abstractions.comments">
        <eClassifiers xsi:type="ecore:EClass" name="Comment" eSuperTypes="#//core/abstractions/ownerships/Element">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A comment is a textual annotation that can be attached to a set of elements."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="body" ordered="false"
              eType="#//core/primitiveTypes/String">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="Specifies a string that is the comment"/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="annotatedElement"
              ordered="false" upperBound="-1" eType="#//core/abstractions/ownerships/Element">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="References the Element(s) being commented."/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
      </eSubpackages>
      <eSubpackages name="namespaces" nsURI="http:///infrastructureLibrary/core/abstractions/namespaces.ecore"
          nsPrefix="infrastructureLibrary.core.abstractions.namespaces">
        <eClassifiers xsi:type="ecore:EClass" name="NamedElement" abstract="true"
            eSuperTypes="#//core/abstractions/ownerships/Element">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A named element is an element in a model that may have a name."/>
          </eAnnotations>
          <eOperations name="hasNoQualifiedName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="(self.name->isEmpty() or self.allNamespaces()->select(ns | ns.name->isEmpty())->notEmpty())&#xD;&#xA;  implies self.qualifiedName->isEmpty()"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="If there is no name, or one of the containing namespaces has no name, there is no qualified name.&#xA;(self.name->isEmpty() or self.allNamespaces()->select(ns | ns.name->isEmpty())->notEmpty())&#xD;&#xA;  implies self.qualifiedName->isEmpty()"/>
            </eAnnotations>
            <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
              </eAnnotations>
            </eParameters>
            <eParameters name="context">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="documentation" value="The cache of context-specific information."/>
              </eAnnotations>
              <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
                <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
                <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eGenericType>
            </eParameters>
          </eOperations>
          <eOperations name="hasQualifiedName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="(self.name->notEmpty() and self.allNamespaces()->select(ns | ns.name->isEmpty())->isEmpty()) implies&#xA;  self.qualifiedName = self.allNamespaces()->iterate( ns : Namespace; result: String = self.name | ns.name->union(self.separator())->union(result))"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="When there is a name, and all of the containing namespaces have a name, the qualified name is constructed from the names of the containing namespaces.&#xA;(self.name->notEmpty() and self.allNamespaces()->select(ns | ns.name->isEmpty())->isEmpty()) implies&#xA;  self.qualifiedName = self.allNamespaces()->iterate( ns : Namespace; result: String = self.name | ns.name->union(self.separator())->union(result))"/>
            </eAnnotations>
            <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
              </eAnnotations>
            </eParameters>
            <eParameters name="context">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="documentation" value="The cache of context-specific information."/>
              </eAnnotations>
              <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
                <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
                <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eGenericType>
            </eParameters>
          </eOperations>
          <eOperations name="allNamespaces" upperBound="-1" eType="#//core/abstractions/namespaces/Namespace">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The query allNamespaces() gives the sequence of namespaces in which the NamedElement is nested, working outwards.&#xA;result = if self.namespace->isEmpty()&#xA;then Sequence{}&#xA;else self.namespace.allNamespaces()->prepend(self.namespace)&#xA;endif"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="result = if self.namespace->isEmpty()&#xA;then Sequence{}&#xA;else self.namespace.allNamespaces()->prepend(self.namespace)&#xA;endif"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isDistinguishableFrom" ordered="false" lowerBound="1"
              eType="#//core/primitiveTypes/Boolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The query isDistinguishableFrom() determines whether two NamedElements may logically co-exist within a Namespace. By default, two named elements are distinguishable if (a) they have unrelated types or (b) they have related types but different names.&#xA;result = if self.oclIsKindOf(n.oclType) or n.oclIsKindOf(self.oclType)&#xA;then ns.getNamesOfMember(self)->intersection(ns.getNamesOfMember(n))->isEmpty()&#xA;else true&#xA;endif"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="result = if self.oclIsKindOf(n.oclType) or n.oclIsKindOf(self.oclType)&#xA;then ns.getNamesOfMember(self)->intersection(ns.getNamesOfMember(n))->isEmpty()&#xA;else true&#xA;endif"/>
            </eAnnotations>
            <eParameters name="n" ordered="false" lowerBound="1" eType="#//core/abstractions/namespaces/NamedElement"/>
            <eParameters name="ns" ordered="false" lowerBound="1" eType="#//core/abstractions/namespaces/Namespace"/>
          </eOperations>
          <eOperations name="separator" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/String">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The query separator() gives the string that is used to separate names when constructing a qualified name.&#xA;result = '::'"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="result = '::'"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="qualifiedName" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/String">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="When there is a name, and all of the containing namespaces have a name, the qualified name is constructed from the names of the containing namespaces.&#xA;result = if self.name->notEmpty() and self.allNamespaces()->select(ns | ns.name->isEmpty())->isEmpty()&#xA;then &#xA;    self.allNamespaces()->iterate( ns : Namespace; result: String = self.name | ns.name->union(self.separator())->union(result))&#xA;else&#xA;    Set{}&#xA;endif"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="result = if self.name->notEmpty() and self.allNamespaces()->select(ns | ns.name->isEmpty())->isEmpty()&#xA;then &#xA;    self.allNamespaces()->iterate( ns : Namespace; result: String = self.name | ns.name->union(self.separator())->union(result))&#xA;else&#xA;    Set{}&#xA;endif"/>
            </eAnnotations>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" ordered="false"
              eType="#//core/primitiveTypes/String">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The name of the NamedElement."/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="qualifiedName" ordered="false"
              eType="#//core/primitiveTypes/String" changeable="false" volatile="true"
              derived="true">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="A name which allows the NamedElement to be identified within a hierarchy of nested Namespaces. It is constructed from the names of the containing namespaces starting at the root of the hierarchy and ending with the name of the NamedElement itself."/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="namespace" ordered="false"
              eType="#//core/abstractions/namespaces/Namespace" changeable="false"
              volatile="true" derived="true" eOpposite="#//core/abstractions/namespaces/Namespace/ownedMember">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="Specifies the namespace that owns the NamedElement."/>
            </eAnnotations>
            <eAnnotations source="subsets" references="#//core/abstractions/ownerships/Element/owner"/>
            <eAnnotations source="union"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Namespace" abstract="true" eSuperTypes="#//core/abstractions/namespaces/NamedElement">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A namespace is an element in a model that contains a set of named elements that can be identified by name."/>
          </eAnnotations>
          <eOperations name="membersDistinguishable" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="membersAreDistinguishable()"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="All the members of a Namespace are distinguishable within it.&#xA;membersAreDistinguishable()"/>
            </eAnnotations>
            <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
              </eAnnotations>
            </eParameters>
            <eParameters name="context">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="documentation" value="The cache of context-specific information."/>
              </eAnnotations>
              <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
                <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
                <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eGenericType>
            </eParameters>
          </eOperations>
          <eOperations name="getNamesOfMember" ordered="false" upperBound="-1" eType="#//core/primitiveTypes/String">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The query getNamesOfMember() gives a set of all of the names that a member would have in a Namespace. In general a member can have multiple names in a Namespace if it is imported more than once with different aliases. Those semantics are specified by overriding the getNamesOfMember operation. The specification here simply returns a set containing a single name, or the empty set if no name.&#xA;result = if member->includes(element) then Set{}->including(element.name) else Set{} endif"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="result = if member->includes(element) then Set{}->including(element.name) else Set{} endif"/>
            </eAnnotations>
            <eParameters name="element" ordered="false" lowerBound="1" eType="#//core/abstractions/namespaces/NamedElement"/>
          </eOperations>
          <eOperations name="membersAreDistinguishable" ordered="false" lowerBound="1"
              eType="#//core/primitiveTypes/Boolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The Boolean query membersAreDistinguishable() determines whether all of the namespaces members are distinguishable within it.&#xA;result = self.member->forAll( memb |&#xA;self.member->excluding(memb)->forAll(other |&#xA;memb.isDistinguishableFrom(other, self)))"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="result = self.member->forAll( memb |&#xA;self.member->excluding(memb)->forAll(other |&#xA;memb.isDistinguishableFrom(other, self)))"/>
            </eAnnotations>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="member" ordered="false"
              upperBound="-1" eType="#//core/abstractions/namespaces/NamedElement"
              changeable="false" volatile="true" derived="true">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="A collection of NamedElements identifiable within the Namespace, either by being owned or by being introduced by importing or inheritance."/>
            </eAnnotations>
            <eAnnotations source="union"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ownedMember" ordered="false"
              upperBound="-1" eType="#//core/abstractions/namespaces/NamedElement"
              changeable="false" volatile="true" derived="true" eOpposite="#//core/abstractions/namespaces/NamedElement/namespace">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="A collection of NamedElements owned by the Namespace."/>
            </eAnnotations>
            <eAnnotations source="subsets" references="#//core/abstractions/ownerships/Element/ownedElement #//core/abstractions/namespaces/Namespace/member"/>
            <eAnnotations source="union"/>
          </eStructuralFeatures>
        </eClassifiers>
      </eSubpackages>
      <eSubpackages name="classifiers" nsURI="http:///infrastructureLibrary/core/abstractions/classifiers.ecore"
          nsPrefix="infrastructureLibrary.core.abstractions.classifiers">
        <eClassifiers xsi:type="ecore:EClass" name="Classifier" abstract="true" eSuperTypes="#//core/abstractions/namespaces/Namespace">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A classifier is a classification of instances - it describes a set of instances that have features in common."/>
          </eAnnotations>
          <eOperations name="allFeatures" ordered="false" upperBound="-1" eType="#//core/abstractions/classifiers/Feature">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The query allFeatures() gives all of the features in the namespace of the classifier. In general, through mechanisms such as inheritance, this will be a larger set than feature.&#xA;result = member->select(oclIsKindOf(Feature))"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="result = member->select(oclIsKindOf(Feature))"/>
            </eAnnotations>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="feature" ordered="false"
              upperBound="-1" eType="#//core/abstractions/classifiers/Feature" changeable="false"
              volatile="true" derived="true" eOpposite="#//core/abstractions/classifiers/Feature/featuringClassifier">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="Specifies each feature defined in the classifier."/>
            </eAnnotations>
            <eAnnotations source="subsets" references="#//core/abstractions/namespaces/Namespace/member"/>
            <eAnnotations source="union"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Feature" abstract="true" eSuperTypes="#//core/abstractions/namespaces/NamedElement">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A feature declares a behavioral or structural characteristic of instances of classifiers."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="featuringClassifier"
              ordered="false" upperBound="-1" eType="#//core/abstractions/classifiers/Classifier"
              changeable="false" volatile="true" derived="true" eOpposite="#//core/abstractions/classifiers/Classifier/feature">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The Classifiers that have this Feature as a feature."/>
            </eAnnotations>
            <eAnnotations source="union"/>
          </eStructuralFeatures>
        </eClassifiers>
      </eSubpackages>
      <eSubpackages name="expressions" nsURI="http:///infrastructureLibrary/core/abstractions/expressions.ecore"
          nsPrefix="infrastructureLibrary.core.abstractions.expressions">
        <eClassifiers xsi:type="ecore:EClass" name="OpaqueExpression" eSuperTypes="#//core/abstractions/expressions/ValueSpecification">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="An opaque expression is an uninterpreted textual statement that denotes a (possibly empty) set of values when evaluated in a context."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="body" unique="false"
              upperBound="-1" eType="#//core/primitiveTypes/String">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The text of the expression, possibly in multiple languages."/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="language" upperBound="-1"
              eType="#//core/primitiveTypes/String">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="Specifies the languages in which the expression is stated. The interpretation of the expression body depends on the languages. If the languages are unspecified, they might be implicit from the expression body or the context. Languages are matched to body strings by order."/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ValueSpecification" abstract="true"
            eSuperTypes="#//core/abstractions/ownerships/Element">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A value specification is the specification of a (possibly empty) set of instances, including both objects and data values."/>
          </eAnnotations>
          <eOperations name="isComputable" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/Boolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The query isComputable() determines whether a value specification can be computed in a model. This operation cannot be fully defined in OCL. A conforming implementation is expected to deliver true for this operation for all value specifications that it can compute, and to compute all of those for which the operation is true. A conforming implementation is expected to be able to compute the value of all literals.&#xA;result = false"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="result = false"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="integerValue" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/Integer">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The query integerValue() gives a single Integer value when one can be computed.&#xA;result = Set{}"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="result = Set{}"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="booleanValue" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/Boolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The query booleanValue() gives a single Boolean value when one can be computed.&#xA;result = Set{}"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="result = Set{}"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="stringValue" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/String">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The query stringValue() gives a single String value when one can be computed.&#xA;result = Set{}"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="result = Set{}"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="unlimitedValue" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/UnlimitedNatural">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The query unlimitedValue() gives a single UnlimitedNatural value when one can be computed.&#xA;result = Set{}"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="result = Set{}"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isNull" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/Boolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The query isNull() returns true when it can be computed that the value is null.&#xA;result = false"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="result = false"/>
            </eAnnotations>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Expression" eSuperTypes="#//core/abstractions/expressions/ValueSpecification">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="An expression is a structured tree of symbols that denotes a (possibly empty) set of values when evaluated in a context."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="symbol" ordered="false"
              eType="#//core/primitiveTypes/String">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The symbol associated with the node in the expression tree."/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="operand" upperBound="-1"
              eType="#//core/abstractions/expressions/ValueSpecification" containment="true">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="Specifies a sequence of operands."/>
            </eAnnotations>
            <eAnnotations source="subsets" references="#//core/abstractions/ownerships/Element/ownedElement"/>
          </eStructuralFeatures>
        </eClassifiers>
      </eSubpackages>
      <eSubpackages name="multiplicityExpressions" nsURI="http:///infrastructureLibrary/core/abstractions/multiplicityExpressions.ecore"
          nsPrefix="infrastructureLibrary.core.abstractions.multiplicityExpressions">
        <eClassifiers xsi:type="ecore:EClass" name="MultiplicityElement" abstract="true"
            eSuperTypes="#//core/abstractions/ownerships/Element">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="MultiplicityElement supports the use of value specifications to define each bound of the multiplicity."/>
          </eAnnotations>
          <eOperations name="lower" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/Integer">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The derived lower attribute must equal the lowerBound.&#xA;result = lowerBound()"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="result = lowerBound()"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="upper" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/UnlimitedNatural">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The derived upper attribute must equal the upperBound.&#xA;result = upperBound()"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="result = upperBound()"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="lowerBound" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/Integer">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The query lowerBound() returns the lower bound of the multiplicity as an integer.&#xA;result = if lowerValue->isEmpty() then 1 else lowerValue.integerValue() endif"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="result = if lowerValue->isEmpty() then 1 else lowerValue.integerValue() endif"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="upperBound" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/UnlimitedNatural">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The query upperBound() returns the upper bound of the multiplicity as an unlimited natural.&#xA;result = if upperValue->isEmpty() then 1 else upperValue.unlimitedValue() endif"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="result = if upperValue->isEmpty() then 1 else upperValue.unlimitedValue() endif"/>
            </eAnnotations>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="lower" ordered="false"
              eType="#//core/primitiveTypes/Integer" volatile="true" defaultValueLiteral="1"
              derived="true">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="Specifies the lower bound of the multiplicity interval."/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="upper" ordered="false"
              eType="#//core/primitiveTypes/UnlimitedNatural" volatile="true" defaultValueLiteral="1"
              derived="true">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="Specifies the upper bound of the multiplicity interval."/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="upperValue" ordered="false"
              eType="#//core/abstractions/expressions/ValueSpecification" containment="true">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The specification of the upper bound for this multiplicity."/>
            </eAnnotations>
            <eAnnotations source="subsets" references="#//core/abstractions/ownerships/Element/ownedElement"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="lowerValue" ordered="false"
              eType="#//core/abstractions/expressions/ValueSpecification" containment="true">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The specification of the lower bound for this multiplicity."/>
            </eAnnotations>
            <eAnnotations source="subsets" references="#//core/abstractions/ownerships/Element/ownedElement"/>
          </eStructuralFeatures>
        </eClassifiers>
      </eSubpackages>
      <eSubpackages name="behavioralFeatures" nsURI="http:///infrastructureLibrary/core/abstractions/behavioralFeatures.ecore"
          nsPrefix="infrastructureLibrary.core.abstractions.behavioralFeatures">
        <eClassifiers xsi:type="ecore:EClass" name="BehavioralFeature" abstract="true"
            eSuperTypes="#//core/abstractions/namespaces/Namespace #//core/abstractions/classifiers/Feature">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A behavioral feature is a feature of a classifier that specifies an aspect of the behavior of its instances."/>
          </eAnnotations>
          <eAnnotations source="duplicates">
            <contents xsi:type="ecore:EOperation" name="isDistinguishableFrom" ordered="false"
                lowerBound="1" eType="#//core/primitiveTypes/Boolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="documentation" value="The query isDistinguishableFrom() determines whether two BehavioralFeatures may coexist in the same Namespace. It specifies that they have to have different signatures.&#xA;result = if n.oclIsKindOf(BehavioralFeature)&#xA;then&#xA;  if ns.getNamesOfMember(self)->intersection(ns.getNamesOfMember(n))->notEmpty()&#xA;  then Set{}->including(self)->including(n)->isUnique( bf | bf.parameter->collect(type))&#xA;  else true&#xA;  endif&#xA;else true&#xA;endif"/>
              </eAnnotations>
              <eAnnotations source="redefines" references="#//core/abstractions/namespaces/NamedElement/isDistinguishableFrom"/>
              <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
                <details key="body" value="result = if n.oclIsKindOf(BehavioralFeature)&#xA;then&#xA;  if ns.getNamesOfMember(self)->intersection(ns.getNamesOfMember(n))->notEmpty()&#xA;  then Set{}->including(self)->including(n)->isUnique( bf | bf.parameter->collect(type))&#xA;  else true&#xA;  endif&#xA;else true&#xA;endif"/>
              </eAnnotations>
              <eParameters name="n" ordered="false" lowerBound="1" eType="#//core/abstractions/namespaces/NamedElement"/>
              <eParameters name="ns" ordered="false" lowerBound="1" eType="#//core/abstractions/namespaces/Namespace"/>
            </contents>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="parameter" upperBound="-1"
              eType="#//core/abstractions/behavioralFeatures/Parameter" changeable="false"
              volatile="true" derived="true">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="Specifies the parameters of the BehavioralFeature."/>
            </eAnnotations>
            <eAnnotations source="subsets" references="#//core/abstractions/namespaces/Namespace/member"/>
            <eAnnotations source="union"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Parameter" abstract="true" eSuperTypes="#//core/abstractions/typedElements/TypedElement #//core/abstractions/namespaces/NamedElement">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A parameter is a specification of an argument used to pass information into or out of an invocation of a behavioral feature."/>
          </eAnnotations>
        </eClassifiers>
      </eSubpackages>
      <eSubpackages name="typedElements" nsURI="http:///infrastructureLibrary/core/abstractions/typedElements.ecore"
          nsPrefix="infrastructureLibrary.core.abstractions.typedElements">
        <eClassifiers xsi:type="ecore:EClass" name="Type" abstract="true" eSuperTypes="#//core/abstractions/namespaces/NamedElement">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A type constrains the values represented by a typed element."/>
          </eAnnotations>
          <eOperations name="conformsTo" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/Boolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The query conformsTo() gives true for a type that conforms to another. By default, two types do not conform to each other. This query is intended to be redefined for specific conformance situations.&#xA;result = false"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="result = false"/>
            </eAnnotations>
            <eParameters name="other" ordered="false" lowerBound="1" eType="#//core/abstractions/typedElements/Type"/>
          </eOperations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="TypedElement" abstract="true"
            eSuperTypes="#//core/abstractions/namespaces/NamedElement">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A typed element has a type."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="type" ordered="false"
              eType="#//core/abstractions/typedElements/Type">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The type of the TypedElement."/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
      </eSubpackages>
      <eSubpackages name="instances" nsURI="http:///infrastructureLibrary/core/abstractions/instances.ecore"
          nsPrefix="infrastructureLibrary.core.abstractions.instances">
        <eClassifiers xsi:type="ecore:EClass" name="InstanceSpecification" eSuperTypes="#//core/abstractions/namespaces/NamedElement">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="An instance specification is a model element that represents an instance in a modeled system."/>
          </eAnnotations>
          <eOperations name="slotsAreDefined" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="slot->forAll(s |&#xA;classifier->exists(c | c.allFeatures()->includes(s.definingFeature))&#xA;)&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The defining feature of each slot is a structural feature (directly or inherited) of a classifier of the instance specification.&#xA;slot->forAll(s |&#xA;classifier->exists(c | c.allFeatures()->includes(s.definingFeature))&#xA;)&#xA;"/>
            </eAnnotations>
            <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
              </eAnnotations>
            </eParameters>
            <eParameters name="context">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="documentation" value="The cache of context-specific information."/>
              </eAnnotations>
              <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
                <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
                <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eGenericType>
            </eParameters>
          </eOperations>
          <eOperations name="noDuplicateSlots" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="classifier->forAll(c |&#xA;(c.allFeatures()->forAll(f | slot->select(s | s.definingFeature = f)->size() &lt;= 1)&#xA;)&#xA;"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="One structural feature (including the same feature inherited from multiple classifiers) is the defining feature of at most one slot in an instance specification.&#xA;classifier->forAll(c |&#xA;(c.allFeatures()->forAll(f | slot->select(s | s.definingFeature = f)->size() &lt;= 1)&#xA;)&#xA;"/>
            </eAnnotations>
            <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
              </eAnnotations>
            </eParameters>
            <eParameters name="context">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="documentation" value="The cache of context-specific information."/>
              </eAnnotations>
              <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
                <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
                <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eGenericType>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="slot" ordered="false"
              upperBound="-1" eType="#//core/abstractions/instances/Slot" containment="true"
              eOpposite="#//core/abstractions/instances/Slot/owningInstance">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="A slot giving the value or values of a structural feature of the instance. An instance specification can have one slot per structural feature of its classifiers, including inherited features. It is not necessary to model a slot for each structural feature, in which case the instance specification is a partial description."/>
            </eAnnotations>
            <eAnnotations source="subsets" references="#//core/abstractions/ownerships/Element/ownedElement"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="classifier" ordered="false"
              upperBound="-1" eType="#//core/abstractions/classifiers/Classifier">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The classifier or classifiers of the represented instance. If multiple classifiers are specified, the instance is classified by all of them."/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="specification" ordered="false"
              eType="#//core/abstractions/expressions/ValueSpecification" containment="true">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="A specification of how to compute, derive, or construct the instance."/>
            </eAnnotations>
            <eAnnotations source="subsets" references="#//core/abstractions/ownerships/Element/ownedElement"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Slot" eSuperTypes="#//core/abstractions/ownerships/Element">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A slot specifies that an entity modeled by an instance specification has a value or values for a specific structural feature."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="value" upperBound="-1"
              eType="#//core/abstractions/expressions/ValueSpecification" containment="true">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The value or values corresponding to the defining feature for the owning instance specification."/>
            </eAnnotations>
            <eAnnotations source="subsets" references="#//core/abstractions/ownerships/Element/ownedElement"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="definingFeature"
              ordered="false" lowerBound="1" eType="#//core/abstractions/structuralFeatures/StructuralFeature">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The structural feature that specifies the values that may be held by the slot."/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="owningInstance" ordered="false"
              lowerBound="1" eType="#//core/abstractions/instances/InstanceSpecification"
              eOpposite="#//core/abstractions/instances/InstanceSpecification/slot">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The instance specification that owns this slot."/>
            </eAnnotations>
            <eAnnotations source="subsets" references="#//core/abstractions/ownerships/Element/owner"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="InstanceValue" eSuperTypes="#//core/abstractions/expressions/ValueSpecification">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="An instance value is a value specification that identifies an instance."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="instance" ordered="false"
              lowerBound="1" eType="#//core/abstractions/instances/InstanceSpecification">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The instance that is the specified value."/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
      </eSubpackages>
      <eSubpackages name="structuralFeatures" nsURI="http:///infrastructureLibrary/core/abstractions/structuralFeatures.ecore"
          nsPrefix="infrastructureLibrary.core.abstractions.structuralFeatures">
        <eClassifiers xsi:type="ecore:EClass" name="StructuralFeature" abstract="true"
            eSuperTypes="#//core/abstractions/classifiers/Feature #//core/abstractions/typedElements/TypedElement">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A structural feature is a typed feature of a classifier that specifies the structure of instances of the classifier."/>
          </eAnnotations>
        </eClassifiers>
      </eSubpackages>
      <eSubpackages name="redefinitions" nsURI="http:///infrastructureLibrary/core/abstractions/redefinitions.ecore"
          nsPrefix="infrastructureLibrary.core.abstractions.redefinitions">
        <eClassifiers xsi:type="ecore:EClass" name="RedefinableElement" abstract="true"
            eSuperTypes="#//core/abstractions/namespaces/NamedElement">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A redefinable element is an element that, when defined in the context of a classifier, can be redefined more specifically or differently in the context of another classifier that specializes (directly or indirectly) the context classifier."/>
          </eAnnotations>
          <eOperations name="redefinitionContextValid" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="self.redefinedElement->forAll(e | self.isRedefinitionContextValid(e))"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="At least one of the redefinition contexts of the redefining element must be a specialization of at least one of the redefinition contexts for each redefined element.&#xA;self.redefinedElement->forAll(e | self.isRedefinitionContextValid(e))"/>
            </eAnnotations>
            <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
              </eAnnotations>
            </eParameters>
            <eParameters name="context">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="documentation" value="The cache of context-specific information."/>
              </eAnnotations>
              <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
                <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
                <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eGenericType>
            </eParameters>
          </eOperations>
          <eOperations name="redefinitionConsistent" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="self.redefinedElement->forAll(re | re.isConsistentWith(self))"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="A redefining element must be consistent with each redefined element.&#xA;self.redefinedElement->forAll(re | re.isConsistentWith(self))"/>
            </eAnnotations>
            <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
              </eAnnotations>
            </eParameters>
            <eParameters name="context">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="documentation" value="The cache of context-specific information."/>
              </eAnnotations>
              <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
                <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
                <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eGenericType>
            </eParameters>
          </eOperations>
          <eOperations name="isConsistentWith" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/Boolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The query isConsistentWith() specifies, for any two RedefinableElements in a context in which redefinition is possible, whether redefinition would be logically consistent. By default, this is false; this operation must be overridden for subclasses of RedefinableElement to define the consistency conditions.&#xA;redefinee.isRedefinitionContextValid(self)&#xA;result = false"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="result = false"/>
            </eAnnotations>
            <eParameters name="redefinee" ordered="false" lowerBound="1" eType="#//core/abstractions/redefinitions/RedefinableElement"/>
          </eOperations>
          <eOperations name="isRedefinitionContextValid" ordered="false" lowerBound="1"
              eType="#//core/primitiveTypes/Boolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The query isRedefinitionContextValid() specifies whether the redefinition contexts of this RedefinableElement are properly related to the redefinition contexts of the specified RedefinableElement to allow this element to redefine the other. By default at least one of the redefinition contexts of this element must be a specialization of at least one of the redefinition contexts of the specified element.&#xA;result = redefinitionContext->exists(c | c.allParents()->includes (redefined.redefinitionContext)))"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="result = redefinitionContext->exists(c | c.allParents()->includes (redefined.redefinitionContext)))"/>
            </eAnnotations>
            <eParameters name="redefined" ordered="false" lowerBound="1" eType="#//core/abstractions/redefinitions/RedefinableElement"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="redefinedElement"
              ordered="false" upperBound="-1" eType="#//core/abstractions/redefinitions/RedefinableElement"
              changeable="false" volatile="true" derived="true">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The redefinable element that is being redefined by this element."/>
            </eAnnotations>
            <eAnnotations source="union"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="redefinitionContext"
              ordered="false" upperBound="-1" eType="#//core/abstractions/super/Classifier"
              changeable="false" volatile="true" derived="true">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="References the contexts that this element may be redefined from."/>
            </eAnnotations>
            <eAnnotations source="union"/>
          </eStructuralFeatures>
        </eClassifiers>
      </eSubpackages>
      <eSubpackages name="super" nsURI="http:///infrastructureLibrary/core/abstractions/super.ecore"
          nsPrefix="infrastructureLibrary.core.abstractions.super">
        <eClassifiers xsi:type="ecore:EClass" name="Classifier" abstract="true" eSuperTypes="#//core/abstractions/namespaces/Namespace">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A classifier can specify a generalization hierarchy by referencing its general classifiers."/>
          </eAnnotations>
          <eOperations name="noCyclesInGeneralization" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="not self.allParents()->includes(self)"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="Generalization hierarchies must be directed and acyclical. A classifier can not be both a transitively general and transitively specific classifier of the same classifier.&#xA;not self.allParents()->includes(self)"/>
            </eAnnotations>
            <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
              </eAnnotations>
            </eParameters>
            <eParameters name="context">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="documentation" value="The cache of context-specific information."/>
              </eAnnotations>
              <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
                <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
                <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eGenericType>
            </eParameters>
          </eOperations>
          <eOperations name="specializeType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="self.parents()->forAll(c | self.maySpecializeType(c))"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="A classifier may only specialize classifiers of a valid type.&#xA;self.parents()->forAll(c | self.maySpecializeType(c))"/>
            </eAnnotations>
            <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
              </eAnnotations>
            </eParameters>
            <eParameters name="context">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="documentation" value="The cache of context-specific information."/>
              </eAnnotations>
              <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
                <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
                <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eGenericType>
            </eParameters>
          </eOperations>
          <eOperations name="inheritedMember" ordered="false" upperBound="-1" eType="#//core/abstractions/namespaces/NamedElement">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The inheritedMember association is derived by inheriting the inheritable members of the parents.&#xA;result = self.inherit(self.parents()->collect(p | p.inheritableMembers(self))"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="result = self.inherit(self.parents()->collect(p | p.inheritableMembers(self))"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="parents" ordered="false" upperBound="-1" eType="#//core/abstractions/super/Classifier">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The query parents() gives all of the immediate ancestors of a generalized Classifier.&#xA;result = general"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="result = general"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="allParents" ordered="false" upperBound="-1" eType="#//core/abstractions/super/Classifier">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The query allParents() gives all of the direct and indirect ancestors of a generalized Classifier.&#xA;result = self.parents()->union(self.parents()->collect(p | p.allParents())"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="result = self.parents()->union(self.parents()->collect(p | p.allParents())"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="inheritableMembers" ordered="false" upperBound="-1" eType="#//core/abstractions/namespaces/NamedElement">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The query inheritableMembers() gives all of the members of a classifier that may be inherited in one of its descendants, subject to whatever visibility restrictions apply.&#xA;c.allParents()->includes(self)&#xA;result = member->select(m | c.hasVisibilityOf(m))"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="result = member->select(m | c.hasVisibilityOf(m))"/>
            </eAnnotations>
            <eParameters name="c" ordered="false" lowerBound="1" eType="#//core/abstractions/super/Classifier"/>
          </eOperations>
          <eOperations name="hasVisibilityOf" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/Boolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The query hasVisibilityOf() determines whether a named element is visible in the classifier. By default all are visible. It is only called when the argument is something owned by a parent.&#xA;self.allParents()->collect(c | c.member)->includes(n)&#xA;result = if (self.inheritedMember->includes (n)) then (n.visibility &lt;> #private) else true"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="result = if (self.inheritedMember->includes (n)) then (n.visibility &lt;> #private) else true"/>
            </eAnnotations>
            <eParameters name="n" ordered="false" lowerBound="1" eType="#//core/abstractions/namespaces/NamedElement"/>
          </eOperations>
          <eOperations name="inherit" ordered="false" upperBound="-1" eType="#//core/abstractions/namespaces/NamedElement">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The query inherit() defines how to inherit a set of elements. Here the operation is defined to inherit them all. It is intended to be redefined in circumstances where inheritance is affected by redefinition.&#xA;result = inhs"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="result = inhs"/>
            </eAnnotations>
            <eParameters name="inhs" ordered="false" upperBound="-1" eType="#//core/abstractions/namespaces/NamedElement"/>
          </eOperations>
          <eOperations name="maySpecializeType" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/Boolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The query maySpecializeType() determines whether this classifier may have a generalization relationship to classifiers of the specified type. By default a classifier may specialize classifiers of the same or a more general type. It is intended to be redefined by classifiers that have different specialization constraints.&#xA;result = self.oclIsKindOf(c.oclType)"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="result = self.oclIsKindOf(c.oclType)"/>
            </eAnnotations>
            <eParameters name="c" ordered="false" lowerBound="1" eType="#//core/abstractions/super/Classifier"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isAbstract" ordered="false"
              lowerBound="1" eType="#//core/primitiveTypes/Boolean" defaultValueLiteral="false">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="If true, the Classifier does not provide a complete declaration and can typically not be instantiated. An abstract classifier is intended to be used by other classifiers e.g. as the target of general metarelationships or generalization relationships."/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="inheritedMember"
              ordered="false" upperBound="-1" eType="#//core/abstractions/namespaces/NamedElement"
              changeable="false" volatile="true" derived="true">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="Specifies all elements inherited by this classifier from the general classifiers."/>
            </eAnnotations>
            <eAnnotations source="subsets" references="#//core/abstractions/namespaces/Namespace/member"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="general" ordered="false"
              upperBound="-1" eType="#//core/abstractions/super/Classifier">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="Specifies the more general classifiers in the generalization hierarchy for this Classifier."/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
      </eSubpackages>
      <eSubpackages name="generalizations" nsURI="http:///infrastructureLibrary/core/abstractions/generalizations.ecore"
          nsPrefix="infrastructureLibrary.core.abstractions.generalizations">
        <eClassifiers xsi:type="ecore:EClass" name="Generalization" eSuperTypes="#//core/abstractions/relationships/DirectedRelationship">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A generalization is a taxonomic relationship between a more general classifier and a more specific classifier. Each instance of the specific classifier is also an instance of the general classifier. Thus, the specific classifier indirectly has features of the more general classifier."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="specific" ordered="false"
              lowerBound="1" eType="#//core/abstractions/generalizations/Classifier"
              eOpposite="#//core/abstractions/generalizations/Classifier/generalization">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="References the specializing classifier in the Generalization relationship. "/>
            </eAnnotations>
            <eAnnotations source="subsets" references="#//core/abstractions/relationships/DirectedRelationship/source #//core/abstractions/ownerships/Element/owner"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="general" ordered="false"
              lowerBound="1" eType="#//core/abstractions/generalizations/Classifier">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="References the general classifier in the Generalization relationship."/>
            </eAnnotations>
            <eAnnotations source="subsets" references="#//core/abstractions/relationships/DirectedRelationship/target"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Classifier" abstract="true" eSuperTypes="#//core/abstractions/typedElements/Type">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A classifier is a type and can own generalizations, thereby making it possible to define generalization relationships to&#xD;&#xA;other classifiers."/>
          </eAnnotations>
          <eOperations name="general" ordered="false" upperBound="-1" eType="#//core/abstractions/generalizations/Classifier">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The general classifiers are the classifiers referenced by the generalization relationships.&#xA;result = self.parents()"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="result = self.parents()"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="parents" ordered="false" upperBound="-1" eType="#//core/abstractions/generalizations/Classifier">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The query parents() gives all of the immediate ancestors of a generalized Classifier.&#xA;result = generalization.general"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="result = generalization.general"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="conformsTo" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/Boolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The query conformsTo() gives true for a classifier that defines a type that conforms to another. This is used, for example, in the specification of signature conformance for operations.&#xA;result = (self=other) or (self.allParents()->includes(other))"/>
            </eAnnotations>
            <eAnnotations source="redefines" references="#//core/abstractions/typedElements/Type/conformsTo"/>
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="result = (self=other) or (self.allParents()->includes(other))"/>
            </eAnnotations>
            <eParameters name="other" ordered="false" lowerBound="1" eType="#//core/abstractions/generalizations/Classifier"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="general" ordered="false"
              upperBound="-1" eType="#//core/abstractions/generalizations/Classifier"
              volatile="true" derived="true">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="Specifies the general Classifiers for this Classifier."/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="generalization" ordered="false"
              upperBound="-1" eType="#//core/abstractions/generalizations/Generalization"
              containment="true" eOpposite="#//core/abstractions/generalizations/Generalization/specific">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="Specifies the Generalization relationships for this Classifier. These Generalizations navigate to more general classifiers in the generalization hierarchy."/>
            </eAnnotations>
            <eAnnotations source="subsets" references="#//core/abstractions/ownerships/Element/ownedElement"/>
          </eStructuralFeatures>
        </eClassifiers>
      </eSubpackages>
      <eSubpackages name="relationships" nsURI="http:///infrastructureLibrary/core/abstractions/relationships.ecore"
          nsPrefix="infrastructureLibrary.core.abstractions.relationships">
        <eClassifiers xsi:type="ecore:EClass" name="Relationship" abstract="true"
            eSuperTypes="#//core/abstractions/ownerships/Element">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Relationship is an abstract concept that specifies some kind of relationship between elements."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="relatedElement" ordered="false"
              lowerBound="1" upperBound="-1" eType="#//core/abstractions/ownerships/Element"
              changeable="false" volatile="true" derived="true">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="Specifies the elements related by the Relationship."/>
            </eAnnotations>
            <eAnnotations source="union"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="DirectedRelationship" abstract="true"
            eSuperTypes="#//core/abstractions/relationships/Relationship">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A directed relationship represents a relationship between a collection of source model elements and a collection of target model elements."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="source" ordered="false"
              lowerBound="1" upperBound="-1" eType="#//core/abstractions/ownerships/Element"
              changeable="false" volatile="true" derived="true">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="Specifies the sources of the DirectedRelationship."/>
            </eAnnotations>
            <eAnnotations source="subsets" references="#//core/abstractions/relationships/Relationship/relatedElement"/>
            <eAnnotations source="union"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="target" ordered="false"
              lowerBound="1" upperBound="-1" eType="#//core/abstractions/ownerships/Element"
              changeable="false" volatile="true" derived="true">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="Specifies the targets of the DirectedRelationship."/>
            </eAnnotations>
            <eAnnotations source="subsets" references="#//core/abstractions/relationships/Relationship/relatedElement"/>
            <eAnnotations source="union"/>
          </eStructuralFeatures>
        </eClassifiers>
      </eSubpackages>
      <eSubpackages name="changeabilities" nsURI="http:///infrastructureLibrary/core/abstractions/changeabilities.ecore"
          nsPrefix="infrastructureLibrary.core.abstractions.changeabilities">
        <eClassifiers xsi:type="ecore:EClass" name="StructuralFeature" abstract="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="StructuralFeature has an attribute that determines whether a client may modify its value."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isReadOnly" ordered="false"
              lowerBound="1" eType="#//core/primitiveTypes/Boolean" defaultValueLiteral="false">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="States whether the feature's value may be modified by a client."/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
      </eSubpackages>
      <eSubpackages name="constraints" nsURI="http:///infrastructureLibrary/core/abstractions/constraints.ecore"
          nsPrefix="infrastructureLibrary.core.abstractions.constraints">
        <eClassifiers xsi:type="ecore:EClass" name="Constraint" eSuperTypes="#//core/abstractions/constraints/NamedElement">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A constraint is a condition or restriction expressed in natural language text or in a machine readable language for the purpose of declaring some of the semantics of an element."/>
          </eAnnotations>
          <eOperations name="notApplyToSelf" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="not constrainedElement->includes(self)"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="A constraint cannot be applied to itself.&#xA;not constrainedElement->includes(self)"/>
            </eAnnotations>
            <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
              </eAnnotations>
            </eParameters>
            <eParameters name="context">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="documentation" value="The cache of context-specific information."/>
              </eAnnotations>
              <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
                <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
                <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eGenericType>
            </eParameters>
          </eOperations>
          <eOperations name="valueSpecificationBoolean" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="self.specification().booleanValue().isOclKindOf(Boolean)"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The value specification for a constraint must evaluate to a Boolean value.&#xA;self.specification().booleanValue().isOclKindOf(Boolean)"/>
            </eAnnotations>
            <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
              </eAnnotations>
            </eParameters>
            <eParameters name="context">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="documentation" value="The cache of context-specific information."/>
              </eAnnotations>
              <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
                <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
                <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eGenericType>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="context" ordered="false"
              eType="#//core/abstractions/constraints/Namespace" eOpposite="#//core/abstractions/constraints/Namespace/ownedRule">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The Namespace that owns this NamedElement."/>
            </eAnnotations>
            <eAnnotations source="subsets" references="#//core/abstractions/constraints/NamedElement/namespace"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="specification" ordered="false"
              lowerBound="1" eType="#//core/abstractions/expressions/ValueSpecification"
              containment="true">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="A condition that must be true when evaluated in order for the constraint to be satisfied."/>
            </eAnnotations>
            <eAnnotations source="subsets" references="#//core/abstractions/ownerships/Element/ownedElement"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="constrainedElement"
              upperBound="-1" eType="#//core/abstractions/ownerships/Element">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The ordered set of Elements referenced by this Constraint."/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="NamedElement" abstract="true"
            eSuperTypes="#//core/abstractions/ownerships/Element">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A named element is an element in a model that may have a name."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="namespace" ordered="false"
              eType="#//core/abstractions/constraints/Namespace" changeable="false"
              volatile="true" derived="true" eOpposite="#//core/abstractions/constraints/Namespace/ownedMember">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="Specifies the namespace that owns the NamedElement."/>
            </eAnnotations>
            <eAnnotations source="subsets" references="#//core/abstractions/ownerships/Element/owner"/>
            <eAnnotations source="union"/>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="Namespace" abstract="true" eSuperTypes="#//core/abstractions/constraints/NamedElement">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A namespace can own constraints. A constraint associated with a namespace may either apply to the namespace itself, or it may apply to elements in the namespace."/>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ownedRule" ordered="false"
              upperBound="-1" eType="#//core/abstractions/constraints/Constraint"
              containment="true" eOpposite="#//core/abstractions/constraints/Constraint/context">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="Specifies a set of Constraints owned by this Namespace."/>
            </eAnnotations>
            <eAnnotations source="subsets" references="#//core/abstractions/constraints/Namespace/ownedMember"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="member" ordered="false"
              upperBound="-1" eType="#//core/abstractions/constraints/NamedElement"
              changeable="false" volatile="true" derived="true">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="A collection of NamedElements identifiable within the Namespace, either by being owned or by being introduced by importing or inheritance."/>
            </eAnnotations>
            <eAnnotations source="union"/>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ownedMember" ordered="false"
              upperBound="-1" eType="#//core/abstractions/constraints/NamedElement"
              changeable="false" volatile="true" derived="true" eOpposite="#//core/abstractions/constraints/NamedElement/namespace">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="A collection of NamedElements owned by the Namespace."/>
            </eAnnotations>
            <eAnnotations source="subsets" references="#//core/abstractions/ownerships/Element/ownedElement #//core/abstractions/constraints/Namespace/member"/>
            <eAnnotations source="union"/>
          </eStructuralFeatures>
        </eClassifiers>
      </eSubpackages>
      <eSubpackages name="visibilities" nsURI="http:///infrastructureLibrary/core/abstractions/visibilities.ecore"
          nsPrefix="infrastructureLibrary.core.abstractions.visibilities">
        <eClassifiers xsi:type="ecore:EClass" name="NamedElement" abstract="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="NamedElement has a visibility attribute."/>
          </eAnnotations>
          <eOperations name="visibilityNeedsOwnership" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="namespace->isEmpty() implies visibility->isEmpty()"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="If a NamedElement is not owned by a Namespace, it does not have a visibility.&#xA;namespace->isEmpty() implies visibility->isEmpty()"/>
            </eAnnotations>
            <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
              </eAnnotations>
            </eParameters>
            <eParameters name="context">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="documentation" value="The cache of context-specific information."/>
              </eAnnotations>
              <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
                <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
                <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eGenericType>
            </eParameters>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="visibility" ordered="false"
              eType="#//core/abstractions/visibilities/VisibilityKind">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="Determines where the NamedElement appears within different Namespaces within the overall model, and its accessibility."/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EEnum" name="VisibilityKind">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="VisibilityKind is an enumeration type that defines literals to determine the visibility of elements in a model."/>
          </eAnnotations>
          <eLiterals name="public">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="A public element is visible to all elements that can access the contents of the namespace that owns it."/>
            </eAnnotations>
          </eLiterals>
          <eLiterals name="private" value="1">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="A private element is only visible inside the namespace that owns it."/>
            </eAnnotations>
          </eLiterals>
          <eLiterals name="protected" value="2">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="A protected element is visible to elements that have a generalization relationship to the namespace that owns it."/>
            </eAnnotations>
          </eLiterals>
          <eLiterals name="package" value="3">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="A package element is owned by a namespace that is not a package, and is visible to elements that are in the same package as its owning namespace. Only named elements that are not owned by packages can be marked as having package visibility.  Any element marked as having package visibility is visible to all elements within the nearest enclosing package (given that other owning elements have proper visibility).  Outside the nearest enclosing package, an element marked as having package visibility is not visible."/>
            </eAnnotations>
          </eLiterals>
        </eClassifiers>
      </eSubpackages>
      <eSubpackages name="literals" nsURI="http:///infrastructureLibrary/core/abstractions/literals.ecore"
          nsPrefix="infrastructureLibrary.core.abstractions.literals">
        <eClassifiers xsi:type="ecore:EClass" name="LiteralBoolean" eSuperTypes="#//core/abstractions/literals/LiteralSpecification">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A literal Boolean is a specification of a Boolean value."/>
          </eAnnotations>
          <eAnnotations source="duplicates">
            <contents xsi:type="ecore:EOperation" name="isComputable" ordered="false"
                lowerBound="1" eType="#//core/primitiveTypes/Boolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="documentation" value="The query isComputable() is redefined to be true.&#xA;result = true"/>
              </eAnnotations>
              <eAnnotations source="redefines" references="#//core/abstractions/expressions/ValueSpecification/isComputable"/>
              <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
                <details key="body" value="result = true"/>
              </eAnnotations>
            </contents>
            <contents xsi:type="ecore:EOperation" name="booleanValue" ordered="false"
                lowerBound="1" eType="#//core/primitiveTypes/Boolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="documentation" value="The query booleanValue() gives the value.&#xA;result = value"/>
              </eAnnotations>
              <eAnnotations source="redefines" references="#//core/abstractions/expressions/ValueSpecification/booleanValue"/>
              <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
                <details key="body" value="result = value"/>
              </eAnnotations>
            </contents>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" ordered="false"
              lowerBound="1" eType="#//core/primitiveTypes/Boolean" defaultValueLiteral="false">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The specified Boolean value."/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="LiteralSpecification" abstract="true"
            eSuperTypes="#//core/abstractions/expressions/ValueSpecification">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A literal specification identifies a literal constant being modeled."/>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="LiteralString" eSuperTypes="#//core/abstractions/literals/LiteralSpecification">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A literal string is a specification of a string value."/>
          </eAnnotations>
          <eAnnotations source="duplicates">
            <contents xsi:type="ecore:EOperation" name="isComputable" ordered="false"
                lowerBound="1" eType="#//core/primitiveTypes/Boolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="documentation" value="The query isComputable() is redefined to be true.&#xA;result = true"/>
              </eAnnotations>
              <eAnnotations source="redefines" references="#//core/abstractions/expressions/ValueSpecification/isComputable"/>
              <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
                <details key="body" value="result = true"/>
              </eAnnotations>
            </contents>
            <contents xsi:type="ecore:EOperation" name="stringValue" ordered="false"
                lowerBound="1" eType="#//core/primitiveTypes/String">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="documentation" value="The query stringValue() gives the value.&#xA;result = value"/>
              </eAnnotations>
              <eAnnotations source="redefines" references="#//core/abstractions/expressions/ValueSpecification/stringValue"/>
              <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
                <details key="body" value="result = value"/>
              </eAnnotations>
            </contents>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" ordered="false"
              eType="#//core/primitiveTypes/String">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The specified String value."/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="LiteralNull" eSuperTypes="#//core/abstractions/literals/LiteralSpecification">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A literal null specifies the lack of a value."/>
          </eAnnotations>
          <eAnnotations source="duplicates">
            <contents xsi:type="ecore:EOperation" name="isComputable" ordered="false"
                lowerBound="1" eType="#//core/primitiveTypes/Boolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="documentation" value="The query isComputable() is redefined to be true.&#xA;result = true"/>
              </eAnnotations>
              <eAnnotations source="redefines" references="#//core/abstractions/expressions/ValueSpecification/isComputable"/>
              <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
                <details key="body" value="result = true"/>
              </eAnnotations>
            </contents>
            <contents xsi:type="ecore:EOperation" name="isNull" ordered="false" lowerBound="1"
                eType="#//core/primitiveTypes/Boolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="documentation" value="The query isNull() returns true.&#xA;result = true"/>
              </eAnnotations>
              <eAnnotations source="redefines" references="#//core/abstractions/expressions/ValueSpecification/isNull"/>
              <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
                <details key="body" value="result = true"/>
              </eAnnotations>
            </contents>
          </eAnnotations>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="LiteralInteger" eSuperTypes="#//core/abstractions/literals/LiteralSpecification">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A literal integer is a specification of an integer value."/>
          </eAnnotations>
          <eAnnotations source="duplicates">
            <contents xsi:type="ecore:EOperation" name="isComputable" ordered="false"
                lowerBound="1" eType="#//core/primitiveTypes/Boolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="documentation" value="The query isComputable() is redefined to be true.&#xA;result = true"/>
              </eAnnotations>
              <eAnnotations source="redefines" references="#//core/abstractions/expressions/ValueSpecification/isComputable"/>
              <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
                <details key="body" value="result = true"/>
              </eAnnotations>
            </contents>
            <contents xsi:type="ecore:EOperation" name="integerValue" ordered="false"
                lowerBound="1" eType="#//core/primitiveTypes/Integer">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="documentation" value="The query integerValue() gives the value.&#xA;result = value"/>
              </eAnnotations>
              <eAnnotations source="redefines" references="#//core/abstractions/expressions/ValueSpecification/integerValue"/>
              <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
                <details key="body" value="result = value"/>
              </eAnnotations>
            </contents>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" ordered="false"
              lowerBound="1" eType="#//core/primitiveTypes/Integer" defaultValueLiteral="0">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The specified Integer value."/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="LiteralUnlimitedNatural" eSuperTypes="#//core/abstractions/literals/LiteralSpecification">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A literal unlimited natural is a specification of an unlimited natural number."/>
          </eAnnotations>
          <eAnnotations source="duplicates">
            <contents xsi:type="ecore:EOperation" name="isComputable" ordered="false"
                lowerBound="1" eType="#//core/primitiveTypes/Boolean">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="documentation" value="The query isComputable() is redefined to be true.&#xA;result = true"/>
              </eAnnotations>
              <eAnnotations source="redefines" references="#//core/abstractions/expressions/ValueSpecification/isComputable"/>
              <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
                <details key="body" value="result = true"/>
              </eAnnotations>
            </contents>
            <contents xsi:type="ecore:EOperation" name="unlimitedValue" ordered="false"
                lowerBound="1" eType="#//core/primitiveTypes/UnlimitedNatural">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="documentation" value="The query unlimitedValue() gives the value.&#xA;result = value"/>
              </eAnnotations>
              <eAnnotations source="redefines" references="#//core/abstractions/expressions/ValueSpecification/unlimitedValue"/>
              <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
                <details key="body" value="result = value"/>
              </eAnnotations>
            </contents>
          </eAnnotations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" ordered="false"
              lowerBound="1" eType="#//core/primitiveTypes/UnlimitedNatural" defaultValueLiteral="0">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The specified UnlimitedNatural value."/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
      </eSubpackages>
      <eSubpackages name="multiplicities" nsURI="http:///infrastructureLibrary/core/abstractions/multiplicities.ecore"
          nsPrefix="infrastructureLibrary.core.abstractions.multiplicities">
        <eClassifiers xsi:type="ecore:EClass" name="MultiplicityElement" abstract="true"
            eSuperTypes="#//core/abstractions/elements/Element">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A multiplicity is a definition of an inclusive interval of non-negative integers beginning with a lower bound and ending with a (possibly infinite) upper bound. A multiplicity element embeds this information to specify the allowable cardinalities for an instantiation of this element."/>
          </eAnnotations>
          <eOperations name="lowerGe0" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="lowerBound()->notEmpty() implies lowerBound() >= 0"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The lower bound must be a non-negative integer literal.&#xA;lowerBound()->notEmpty() implies lowerBound() >= 0"/>
            </eAnnotations>
            <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
              </eAnnotations>
            </eParameters>
            <eParameters name="context">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="documentation" value="The cache of context-specific information."/>
              </eAnnotations>
              <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
                <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
                <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eGenericType>
            </eParameters>
          </eOperations>
          <eOperations name="upperGeLower" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="(upperBound()->notEmpty() and lowerBound()->notEmpty()) implies upperBound() >= lowerBound()"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The upper bound must be greater than or equal to the lower bound.&#xA;(upperBound()->notEmpty() and lowerBound()->notEmpty()) implies upperBound() >= lowerBound()"/>
            </eAnnotations>
            <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
              </eAnnotations>
            </eParameters>
            <eParameters name="context">
              <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
                <details key="documentation" value="The cache of context-specific information."/>
              </eAnnotations>
              <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
                <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
                <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eGenericType>
            </eParameters>
          </eOperations>
          <eOperations name="lowerBound" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/Integer">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The query lowerBound() returns the lower bound of the multiplicity as an integer.&#xA;result = if lower->notEmpty() then lower else 1 endif"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="result = if lower->notEmpty() then lower else 1 endif"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="upperBound" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/UnlimitedNatural">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The query upperBound() returns the upper bound of the multiplicity for a bounded multiplicity as an unlimited natural.&#xA;result = if upper->notEmpty() then upper else 1 endif"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="result = if upper->notEmpty() then upper else 1 endif"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="isMultivalued" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/Boolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The query isMultivalued() checks whether this multiplicity has an upper bound greater than one.&#xA;upperBound()->notEmpty()&#xA;result = upperBound() > 1"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="result = upperBound() > 1"/>
            </eAnnotations>
          </eOperations>
          <eOperations name="includesCardinality" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/Boolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The query includesCardinality() checks whether the specified cardinality is valid for this multiplicity.&#xA;upperBound()->notEmpty() and lowerBound()->notEmpty()&#xA;includesCardinality = (lowerBound() &lt;= C) and (upperBound() >= C)&#xA;&#xA;result = (lowerBound() &lt;= C) and (upperBound() >= C)"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="result = (lowerBound() &lt;= C) and (upperBound() >= C)"/>
            </eAnnotations>
            <eParameters name="c" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/Integer"/>
          </eOperations>
          <eOperations name="includesMultiplicity" ordered="false" lowerBound="1"
              eType="#//core/primitiveTypes/Boolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The query includesMultiplicity() checks whether this multiplicity includes all the cardinalities allowed by the specified multiplicity.&#xA;self.upperBound()->notEmpty() and self.lowerBound()->notEmpty() and M.upperBound()->notEmpty() and M.lowerBound()->notEmpty()&#xA;result = (self.lowerBound() &lt;= M.lowerBound()) and (self.upperBound() >= M.upperBound())"/>
            </eAnnotations>
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="result = (self.lowerBound() &lt;= M.lowerBound()) and (self.upperBound() >= M.upperBound())"/>
            </eAnnotations>
            <eParameters name="m" ordered="false" lowerBound="1" eType="#//core/basic/MultiplicityElement"/>
          </eOperations>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isOrdered" ordered="false"
              lowerBound="1" eType="#//core/primitiveTypes/Boolean" defaultValueLiteral="false">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="For a multivalued multiplicity, this attribute specifies whether the values in an instantiation of this element are sequentially ordered."/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="isUnique" ordered="false"
              lowerBound="1" eType="#//core/primitiveTypes/Boolean" defaultValueLiteral="true">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="For a multivalued multiplicity, this attributes specifies whether the values in an instantiation of this element are unique."/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="lower" ordered="false"
              eType="#//core/primitiveTypes/Integer" defaultValueLiteral="1">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="Specifies the lower bound of the multiplicity interval."/>
            </eAnnotations>
          </eStructuralFeatures>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="upper" ordered="false"
              eType="#//core/primitiveTypes/UnlimitedNatural" defaultValueLiteral="1">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="Specifies the upper bound of the multiplicity interval."/>
            </eAnnotations>
          </eStructuralFeatures>
        </eClassifiers>
      </eSubpackages>
      <eSubpackages name="elements" nsURI="http:///infrastructureLibrary/core/abstractions/elements.ecore"
          nsPrefix="infrastructureLibrary.core.abstractions.elements">
        <eClassifiers xsi:type="ecore:EClass" name="Element" abstract="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="An element is a constituent of a model."/>
          </eAnnotations>
        </eClassifiers>
      </eSubpackages>
    </eSubpackages>
    <eSubpackages name="primitiveTypes" nsURI="http:///infrastructureLibrary/core/primitiveTypes.ecore"
        nsPrefix="infrastructureLibrary.core.primitiveTypes">
      <eClassifiers xsi:type="ecore:EDataType" name="Integer" instanceClassName="Integer">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="An integer is a primitive type representing integer values."/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EDataType" name="Boolean" instanceClassName="Boolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A Boolean type is used for logical expression, consisting of the predefined values true and false."/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EDataType" name="UnlimitedNatural" instanceClassName="UnlimitedNatural">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="An unlimited natural is a primitive type representing unlimited natural values."/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EDataType" name="String" instanceClassName="String">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A string is a sequence of characters in some suitable character set used to display information about the model. Character sets may include non-Roman alphabets and characters."/>
        </eAnnotations>
      </eClassifiers>
    </eSubpackages>
    <eSubpackages name="basic" nsURI="http:///infrastructureLibrary/core/basic.ecore"
        nsPrefix="infrastructureLibrary.core.basic">
      <eClassifiers xsi:type="ecore:EClass" name="Class" eSuperTypes="#//core/basic/Type">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A class is a type that has objects as its instances."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="isAbstract" ordered="false"
            lowerBound="1" eType="#//core/primitiveTypes/Boolean" defaultValueLiteral="false">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="True when a class is abstract."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="ownedAttribute" upperBound="-1"
            eType="#//core/basic/Property" containment="true" eOpposite="#//core/basic/Property/class">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The attributes owned by a class. These do not include the inherited attributes. Attributes are represented by instances of Property."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="ownedOperation" upperBound="-1"
            eType="#//core/basic/Operation" containment="true" eOpposite="#//core/basic/Operation/class">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The operations owned by a class. These do not include the inherited operations."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="superClass" ordered="false"
            upperBound="-1" eType="#//core/basic/Class">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The immediate superclasses of a class, from which the class inherits."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Type" abstract="true" eSuperTypes="#//core/basic/NamedElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A type is a named element that is used as the type for a typed element. A type can be contained in a package."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="package" ordered="false"
            eType="#//core/basic/Package" eOpposite="#//core/basic/Package/ownedType">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Specifies the owning package of this classifier, if any."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="NamedElement" abstract="true" eSuperTypes="#//core/basic/Element">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A named element represents an element with a name."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" ordered="false"
            eType="#//core/primitiveTypes/String">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The name of the NamedElement."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Element" abstract="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="An element is a constituent of a model."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="ownedComment" ordered="false"
            upperBound="-1" eType="#//core/basic/Comment" containment="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The Comments owned by this element."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Comment" eSuperTypes="#//core/basic/Element">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A comment is a textual annotation that can be attached to a set of elements."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="body" ordered="false"
            eType="#//core/primitiveTypes/String">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Specifies a string that is the comment."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="annotatedElement" ordered="false"
            upperBound="-1" eType="#//core/basic/Element">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="References the Element(s) being commented."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Package" eSuperTypes="#//core/basic/NamedElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A package is a container for types and other packages."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="nestedPackage" ordered="false"
            upperBound="-1" eType="#//core/basic/Package" containment="true" eOpposite="#//core/basic/Package/nestingPackage">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The set of contained packages."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="nestingPackage" ordered="false"
            eType="#//core/basic/Package" eOpposite="#//core/basic/Package/nestedPackage">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The containing package."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="ownedType" ordered="false"
            upperBound="-1" eType="#//core/basic/Type" containment="true" eOpposite="#//core/basic/Type/package">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The set of contained types."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Property" eSuperTypes="#//core/basic/MultiplicityElement #//core/basic/TypedElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A property is a typed element that represents an attribute of a class."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="isReadOnly" ordered="false"
            lowerBound="1" eType="#//core/primitiveTypes/Boolean" defaultValueLiteral="false">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="If isReadOnly is true, the attribute may not be written to after initialization."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="default" ordered="false"
            eType="#//core/primitiveTypes/String">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A string that is evaluated to give a default value for the attribute when an object of the owning class is instantiated."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="isComposite" ordered="false"
            lowerBound="1" eType="#//core/primitiveTypes/Boolean" defaultValueLiteral="false">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="If isComposite is true, the object containing the attribute is a container for the object or value contained in the attribute."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="isDerived" ordered="false"
            lowerBound="1" eType="#//core/primitiveTypes/Boolean" defaultValueLiteral="false">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="If isDerived is true, the value of the attribute is derived from information elsewhere."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="opposite" ordered="false"
            eType="#//core/basic/Property">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Two attributes attr1 and attr2 of two objects o1 and o2 (which may be the same object) may be paired with each other so that o1.attr1 refers to o2 if and only if o2.attr2 refers to o1. In such a case attr1 is the opposite of attr2 and attr2 is the opposite of attr1."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="class" ordered="false"
            eType="#//core/basic/Class" eOpposite="#//core/basic/Class/ownedAttribute">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The class that owns the property, and of which the property is an attribute."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="TypedElement" abstract="true" eSuperTypes="#//core/basic/NamedElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A typed element is a kind of named element that represents an element with a type."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="type" ordered="false"
            eType="#//core/basic/Type">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The type of the TypedElement."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Operation" eSuperTypes="#//core/basic/MultiplicityElement #//core/basic/TypedElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="An operation is owned by a class and may be invoked in the context of objects that are instances of that class. It is a typed element and a multiplicity element."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="raisedException" ordered="false"
            upperBound="-1" eType="#//core/basic/Type">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The exceptions that are declared as possible during an invocation of the operation."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="ownedParameter" upperBound="-1"
            eType="#//core/basic/Parameter" containment="true" eOpposite="#//core/basic/Parameter/operation">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The parameters to the operation."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="class" ordered="false"
            eType="#//core/basic/Class" eOpposite="#//core/basic/Class/ownedOperation">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The class that owns the operation."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Parameter" eSuperTypes="#//core/basic/MultiplicityElement #//core/basic/TypedElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A parameter is a typed element that represents a parameter of an operation."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="operation" ordered="false"
            eType="#//core/basic/Operation" eOpposite="#//core/basic/Operation/ownedParameter">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The operation that owns the parameter."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Enumeration" eSuperTypes="#//core/basic/DataType">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="An enumeration defines a set of literals that can be used as its values."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="ownedLiteral" upperBound="-1"
            eType="#//core/basic/EnumerationLiteral" containment="true" eOpposite="#//core/basic/EnumerationLiteral/enumeration">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The ordered set of literals for this Enumeration."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="DataType" abstract="true" eSuperTypes="#//core/basic/Type">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="DataType is an abstract class that acts as a common superclass for different kinds of data types."/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="EnumerationLiteral" eSuperTypes="#//core/basic/NamedElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="An enumeration literal is a value of an enumeration."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="enumeration" ordered="false"
            eType="#//core/basic/Enumeration" eOpposite="#//core/basic/Enumeration/ownedLiteral">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The Enumeration that this EnumerationLiteral is a member of."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="PrimitiveType" eSuperTypes="#//core/basic/DataType">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A primitive type is a data type implemented by the underlying infrastructure and made available for modeling."/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="MultiplicityElement" abstract="true"
          eSuperTypes="#//core/basic/Element">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A multiplicity is a definition of an inclusive interval of non-negative integers beginning with a lower bound and ending with a (possibly infinite) upper bound. A multiplicity element embeds this information to specify the allowable cardinalities for an instantiation of this element."/>
        </eAnnotations>
        <eOperations name="lowerGe0" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="lowerBound()->notEmpty() implies lowerBound() >= 0"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The lower bound must be a non-negative integer literal.&#xA;lowerBound()->notEmpty() implies lowerBound() >= 0"/>
          </eAnnotations>
          <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
          </eParameters>
          <eParameters name="context">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="upperGeLower" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="(upperBound()->notEmpty() and lowerBound()->notEmpty()) implies upperBound() >= lowerBound()"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The upper bound must be greater than or equal to the lower bound.&#xA;(upperBound()->notEmpty() and lowerBound()->notEmpty()) implies upperBound() >= lowerBound()"/>
          </eAnnotations>
          <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
          </eParameters>
          <eParameters name="context">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="lowerBound" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/Integer">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query lowerBound() returns the lower bound of the multiplicity as an integer.&#xA;result = if lower->notEmpty() then lower else 1 endif"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = if lower->notEmpty() then lower else 1 endif"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="upperBound" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/UnlimitedNatural">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query upperBound() returns the upper bound of the multiplicity for a bounded multiplicity as an unlimited natural.&#xA;result = if upper->notEmpty() then upper else 1 endif"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = if upper->notEmpty() then upper else 1 endif"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="isMultivalued" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/Boolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query isMultivalued() checks whether this multiplicity has an upper bound greater than one.&#xA;upperBound()->notEmpty()&#xA;result = upperBound() > 1"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = upperBound() > 1"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="includesCardinality" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/Boolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query includesCardinality() checks whether the specified cardinality is valid for this multiplicity.&#xA;upperBound()->notEmpty() and lowerBound()->notEmpty()&#xA;result = (lowerBound() &lt;= C) and (upperBound() >= C)"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = (lowerBound() &lt;= C) and (upperBound() >= C)"/>
          </eAnnotations>
          <eParameters name="c" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/Integer"/>
        </eOperations>
        <eOperations name="includesMultiplicity" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/Boolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query includesMultiplicity() checks whether this multiplicity includes all the cardinalities allowed by the specified multiplicity.&#xA;self.upperBound()->notEmpty() and self.lowerBound()->notEmpty() and M.upperBound()->notEmpty() and M.lowerBound()->notEmpty()&#xA;result = (self.lowerBound() &lt;= M.lowerBound()) and (self.upperBound() >= M.upperBound())"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = (self.lowerBound() &lt;= M.lowerBound()) and (self.upperBound() >= M.upperBound())"/>
          </eAnnotations>
          <eParameters name="m" ordered="false" lowerBound="1" eType="#//core/basic/MultiplicityElement"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="isOrdered" ordered="false"
            lowerBound="1" eType="#//core/primitiveTypes/Boolean" defaultValueLiteral="false">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="For a multivalued multiplicity, this attribute specifies whether the values in an instantiation of this element are sequentially ordered."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="isUnique" ordered="false"
            lowerBound="1" eType="#//core/primitiveTypes/Boolean" defaultValueLiteral="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="For a multivalued multiplicity, this attributes specifies whether the values in an instantiation of this element are unique."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="lower" ordered="false"
            eType="#//core/primitiveTypes/Integer" defaultValueLiteral="1">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Specifies the lower bound of the multiplicity interval."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="upper" ordered="false"
            eType="#//core/primitiveTypes/UnlimitedNatural" defaultValueLiteral="1">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Specifies the upper bound of the multiplicity interval."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
    </eSubpackages>
    <eSubpackages name="constructs" nsURI="http:///infrastructureLibrary/core/constructs.ecore"
        nsPrefix="infrastructureLibrary.core.constructs">
      <eClassifiers xsi:type="ecore:EClass" name="Classifier" abstract="true" eSuperTypes="#//core/constructs/Namespace #//core/constructs/Type">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A classifier is a classification of instances - it describes a set of instances that have features in common. A classifier can specify a generalization hierarchy by referencing its general classifiers."/>
        </eAnnotations>
        <eOperations name="noCyclesInGeneralization" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="not self.allParents()->includes(self)"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Generalization hierarchies must be directed and acyclical. A classifier can not be both a transitively general and transitively specific classifier of the same classifier.&#xA;not self.allParents()->includes(self)"/>
          </eAnnotations>
          <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
          </eParameters>
          <eParameters name="context">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="specializeType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="self.parents()->forAll(c | self.maySpecializeType(c))"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A classifier may only specialize classifiers of a valid type.&#xA;self.parents()->forAll(c | self.maySpecializeType(c))"/>
          </eAnnotations>
          <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
          </eParameters>
          <eParameters name="context">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="conformsTo" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/Boolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query conformsTo() gives true for a classifier that defines a type that conforms to another. This is used, for example, in the specification of signature conformance for operations.&#xA;result = (self=other) or (self.allParents()->includes(other))"/>
          </eAnnotations>
          <eAnnotations source="redefines" references="#//core/constructs/Type/conformsTo"/>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = (self=other) or (self.allParents()->includes(other))"/>
          </eAnnotations>
          <eParameters name="other" ordered="false" lowerBound="1" eType="#//core/constructs/Classifier"/>
        </eOperations>
        <eOperations name="allFeatures" ordered="false" upperBound="-1" eType="#//core/constructs/Feature">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query allFeatures() gives all of the features in the namespace of the classifier. In general, through mechanisms such as inheritance, this will be a larger set than feature.&#xA;result = member->select(oclIsKindOf(Feature))"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = member->select(oclIsKindOf(Feature))"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="general" ordered="false" upperBound="-1" eType="#//core/constructs/Classifier">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The general classifiers are the classifiers referenced by the generalization relationships.&#xA;result = self.parents()"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = self.parents()"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="parents" ordered="false" upperBound="-1" eType="#//core/constructs/Classifier">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query parents() gives all of the immediate ancestors of a generalized Classifier.&#xA;result = generalization.general"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = generalization.general"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="inheritedMember" ordered="false" upperBound="-1" eType="#//core/constructs/NamedElement">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The inheritedMember association is derived by inheriting the inheritable members of the parents.&#xA;result = self.inherit(self.parents()->collect(p | p.inheritableMembers(self))"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = self.inherit(self.parents()->collect(p | p.inheritableMembers(self))"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="allParents" ordered="false" upperBound="-1" eType="#//core/constructs/Classifier">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query allParents() gives all of the direct and indirect ancestors of a generalized Classifier.&#xA;result = self.parents()->union(self.parents()->collect(p | p.allParents())"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = self.parents()->union(self.parents()->collect(p | p.allParents())"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="inheritableMembers" ordered="false" upperBound="-1" eType="#//core/constructs/NamedElement">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query inheritableMembers() gives all of the members of a classifier that may be inherited in one of its descendants, subject to whatever visibility restrictions apply.&#xA;c.allParents()->includes(self)&#xA;result = member->select(m | c.hasVisibilityOf(m))"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = member->select(m | c.hasVisibilityOf(m))"/>
          </eAnnotations>
          <eParameters name="c" ordered="false" lowerBound="1" eType="#//core/constructs/Classifier"/>
        </eOperations>
        <eOperations name="hasVisibilityOf" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/Boolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query hasVisibilityOf() determines whether a named element is visible in the classifier. By default all are visible. It is only called when the argument is something owned by a parent.&#xA;self.allParents()->collect(c | c.member)->includes(n)&#xA;result = if (self.inheritedMember->includes(n)) then (n.visibility &lt;> #private) else true"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = if (self.inheritedMember->includes(n)) then (n.visibility &lt;> #private) else true"/>
          </eAnnotations>
          <eParameters name="n" ordered="false" lowerBound="1" eType="#//core/constructs/NamedElement"/>
        </eOperations>
        <eOperations name="inherit" ordered="false" upperBound="-1" eType="#//core/constructs/NamedElement">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The inherit operation is overridden to exclude redefined properties.&#xA;result = inhs"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = inhs"/>
          </eAnnotations>
          <eParameters name="inhs" ordered="false" upperBound="-1" eType="#//core/constructs/NamedElement"/>
        </eOperations>
        <eOperations name="maySpecializeType" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/Boolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query maySpecializeType() determines whether this classifier may have a generalization relationship to classifiers of the specified type. By default a classifier may specialize classifiers of the same or a more general type. It is intended to be redefined by classifiers that have different specialization constraints.&#xA;result = self.oclIsKindOf(c.oclType)"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = self.oclIsKindOf(c.oclType)"/>
          </eAnnotations>
          <eParameters name="c" ordered="false" lowerBound="1" eType="#//core/constructs/Classifier"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="attribute" ordered="false"
            upperBound="-1" eType="#//core/constructs/Property" changeable="false"
            volatile="true" derived="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Refers to all of the Properties that are direct (i.e. not inherited or imported) attributes of the classifier."/>
          </eAnnotations>
          <eAnnotations source="subsets" references="#//core/constructs/Classifier/feature"/>
          <eAnnotations source="union"/>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="feature" ordered="false"
            upperBound="-1" eType="#//core/constructs/Feature" changeable="false"
            volatile="true" derived="true" eOpposite="#//core/constructs/Feature/featuringClassifier">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Note that there may be members of the Classifier that are of the type Feature but are not included in this association, e.g. inherited features."/>
          </eAnnotations>
          <eAnnotations source="subsets" references="#//core/constructs/Namespace/member"/>
          <eAnnotations source="union"/>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="general" ordered="false"
            upperBound="-1" eType="#//core/constructs/Classifier">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="References the general classifier in the Generalization relationship."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="inheritedMember" ordered="false"
            upperBound="-1" eType="#//core/constructs/NamedElement" changeable="false"
            volatile="true" derived="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Specifies all elements inherited by this classifier from the general classifiers."/>
          </eAnnotations>
          <eAnnotations source="subsets" references="#//core/constructs/Namespace/member"/>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="isFinalSpecialization"
            ordered="false" lowerBound="1" eType="#//core/primitiveTypes/Boolean"
            defaultValueLiteral="false">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="If true, the Classifier cannot be specialized by generalization. Note that this property is preserved through package merge operations; that is, the capability to specialize a Classifier (i.e., isFinalSpecialization =false) must be preserved in the resulting Classifier of a package merge operation where a Classifier with isFinalSpecialization =false is merged with a matching Classifier with isFinalSpecialization =true: the resulting Classifier will have isFinalSpecialization =false."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Namespace" abstract="true" eSuperTypes="#//core/constructs/NamedElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A namespace is an element in a model that contains a set of named elements that can be identified by name."/>
        </eAnnotations>
        <eOperations name="membersDistinguishable" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="membersAreDistinguishable()"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="All the members of a Namespace are distinguishable within it.&#xA;membersAreDistinguishable()"/>
          </eAnnotations>
          <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
          </eParameters>
          <eParameters name="context">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="importedMember" ordered="false" upperBound="-1" eType="#//core/constructs/PackageableElement">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The importedMember property is derived from the ElementImports and the PackageImports. References the PackageableElements that are members of this Namespace as a result of either PackageImports or ElementImports.&#xA;result = self.importMembers(self.elementImport.importedElement.asSet()->union(self.packageImport.importedPackage->collect(p | p.visibleMembers())))"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = self.importMembers(self.elementImport.importedElement.asSet()->union(self.packageImport.importedPackage->collect(p | p.visibleMembers())))"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="getNamesOfMember" ordered="false" upperBound="-1" eType="#//core/primitiveTypes/String">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query getNamesOfMember() takes importing into account. It gives back the set of names that an element would have in an importing namespace, either because it is owned, or if not owned then imported individually, or if not individually then from a package.&#xA;result = if self.ownedMember->includes(element)&#xA;then Set{}->include(element.name)&#xA;else let elementImports: ElementImport = self.elementImport->select(ei | ei.importedElement = element) in&#xA;  if elementImports->notEmpty()&#xA;  then elementImports->collect(el | el.getName())&#xA;  else self.packageImport->select(pi | pi.importedPackage.visibleMembers()->includes(element))->collect(pi | pi.importedPackage.getNamesOfMember(element))&#xA;  endif&#xA;endif"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = if self.ownedMember->includes(element)&#xA;then Set{}->include(element.name)&#xA;else let elementImports: ElementImport = self.elementImport->select(ei | ei.importedElement = element) in&#xA;  if elementImports->notEmpty()&#xA;  then elementImports->collect(el | el.getName())&#xA;  else self.packageImport->select(pi | pi.importedPackage.visibleMembers()->includes(element))->collect(pi | pi.importedPackage.getNamesOfMember(element))&#xA;  endif&#xA;endif"/>
          </eAnnotations>
          <eParameters name="element" ordered="false" lowerBound="1" eType="#//core/constructs/NamedElement"/>
        </eOperations>
        <eOperations name="importMembers" ordered="false" upperBound="-1" eType="#//core/constructs/PackageableElement">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query importMembers() defines which of a set of PackageableElements are actually imported into the namespace. This excludes hidden ones, i.e., those which have names that conflict with names of owned members, and also excludes elements which would have the same name when imported.&#xA;result = self.excludeCollisions(imps)->select(imp | self.ownedMember->forAll(mem | mem.imp.isDistinguishableFrom(mem, self)))"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = self.excludeCollisions(imps)->select(imp | self.ownedMember->forAll(mem | mem.imp.isDistinguishableFrom(mem, self)))"/>
          </eAnnotations>
          <eParameters name="imps" ordered="false" upperBound="-1" eType="#//core/constructs/PackageableElement"/>
        </eOperations>
        <eOperations name="excludeCollisions" ordered="false" upperBound="-1" eType="#//core/constructs/PackageableElement">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query excludeCollisions() excludes from a set of PackageableElements any that would not be distinguishable from each other in this namespace.&#xA;result = imps->reject(imp1 | imps.exists(imp2 | not imp1.isDistinguishableFrom(imp2, self)))"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = imps->reject(imp1 | imps.exists(imp2 | not imp1.isDistinguishableFrom(imp2, self)))"/>
          </eAnnotations>
          <eParameters name="imps" ordered="false" upperBound="-1" eType="#//core/constructs/PackageableElement"/>
        </eOperations>
        <eOperations name="membersAreDistinguishable" ordered="false" lowerBound="1"
            eType="#//core/primitiveTypes/Boolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The Boolean query membersAreDistinguishable() determines whether all of the namespace's members are distinguishable within it.&#xA;result = self.member->forAll( memb |&#xA;&#x9;self.member->excluding(memb)->forAll(other |&#xA;&#x9;&#x9;memb.isDistinguishableFrom(other, self)))"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = self.member->forAll( memb |&#xA;&#x9;self.member->excluding(memb)->forAll(other |&#xA;&#x9;&#x9;memb.isDistinguishableFrom(other, self)))"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="ownedMember" ordered="false"
            upperBound="-1" eType="#//core/constructs/NamedElement" changeable="false"
            volatile="true" derived="true" eOpposite="#//core/constructs/NamedElement/namespace">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A collection of NamedElements owned by the Namespace."/>
          </eAnnotations>
          <eAnnotations source="subsets" references="#//core/constructs/Namespace/member #//core/constructs/Element/ownedElement"/>
          <eAnnotations source="union"/>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="importedMember" ordered="false"
            upperBound="-1" eType="#//core/constructs/PackageableElement" changeable="false"
            volatile="true" derived="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="References the PackageableElements that are members of this Namespace as a result of either PackageImports or ElementImports."/>
          </eAnnotations>
          <eAnnotations source="subsets" references="#//core/constructs/Namespace/member"/>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="elementImport" ordered="false"
            upperBound="-1" eType="#//core/constructs/ElementImport" containment="true"
            eOpposite="#//core/constructs/ElementImport/importingNamespace">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="References the ElementImports owned by the Namespace."/>
          </eAnnotations>
          <eAnnotations source="subsets" references="#//core/constructs/Element/ownedElement"/>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="packageImport" ordered="false"
            upperBound="-1" eType="#//core/constructs/PackageImport" containment="true"
            eOpposite="#//core/constructs/PackageImport/importingNamespace">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="References the PackageImports owned by the Namespace."/>
          </eAnnotations>
          <eAnnotations source="subsets" references="#//core/constructs/Element/ownedElement"/>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="member" ordered="false"
            upperBound="-1" eType="#//core/constructs/NamedElement" changeable="false"
            volatile="true" derived="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A collection of NamedElements identifiable within the Namespace, either by being owned or by being introduced by importing or inheritance."/>
          </eAnnotations>
          <eAnnotations source="union"/>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="ownedRule" ordered="false"
            upperBound="-1" eType="#//core/constructs/Constraint" containment="true"
            eOpposite="#//core/constructs/Constraint/context">
          <eAnnotations source="subsets" references="#//core/constructs/Namespace/ownedMember"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="NamedElement" abstract="true" eSuperTypes="#//core/constructs/Element">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A named element is an element in a model that may have a name."/>
        </eAnnotations>
        <eOperations name="hasNoQualifiedName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="(self.name->isEmpty() or self.allNamespaces()->select(ns | ns.name->isEmpty())->notEmpty())&#xD;&#xA;  implies self.qualifiedName->isEmpty()"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="If there is no name, or one of the containing namespaces has no name, there is no qualified name.&#xA;(self.name->isEmpty() or self.allNamespaces()->select(ns | ns.name->isEmpty())->notEmpty())&#xD;&#xA;  implies self.qualifiedName->isEmpty()"/>
          </eAnnotations>
          <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
          </eParameters>
          <eParameters name="context">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="hasQualifiedName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="(self.name->notEmpty() and self.allNamespaces()->select(ns | ns.name->isEmpty())->isEmpty()) implies&#xA;  self.qualifiedName = self.allNamespaces()->iterate( ns : Namespace; result: String = self.name | ns.name->union(self.separator())->union(result))"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="When there is a name, and all of the containing namespaces have a name, the qualified name is constructed from the names of the containing namespaces.&#xA;(self.name->notEmpty() and self.allNamespaces()->select(ns | ns.name->isEmpty())->isEmpty()) implies&#xA;  self.qualifiedName = self.allNamespaces()->iterate( ns : Namespace; result: String = self.name | ns.name->union(self.separator())->union(result))"/>
          </eAnnotations>
          <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
          </eParameters>
          <eParameters name="context">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="visibilityNeedsOwnership" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="namespace->isEmpty() implies visibility->isEmpty()"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="If a NamedElement is not owned by a Namespace, it does not have a visibility.&#xA;namespace->isEmpty() implies visibility->isEmpty()"/>
          </eAnnotations>
          <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
          </eParameters>
          <eParameters name="context">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="allNamespaces" upperBound="-1" eType="#//core/constructs/Namespace">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query allNamespaces() gives the sequence of namespaces in which the NamedElement is nested, working outwards.&#xA;result = if self.namespace->isEmpty()&#xA;then Sequence{}&#xA;else self.namespace.allNamespaces()->prepend(self.namespace)&#xA;endif"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = if self.namespace->isEmpty()&#xA;then Sequence{}&#xA;else self.namespace.allNamespaces()->prepend(self.namespace)&#xA;endif"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="isDistinguishableFrom" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/Boolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query isDistinguishableFrom() determines whether two NamedElements may logically co-exist within a Namespace. By default, two named elements are distinguishable if (a) they have unrelated types or (b) they have related types but different names.&#xA;result = if self.oclIsKindOf(n.oclType) or n.oclIsKindOf(self.oclType)&#xA;then ns.getNamesOfMember(self)->intersection(ns.getNamesOfMember(n))->isEmpty()&#xA;else true&#xA;endif"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = if self.oclIsKindOf(n.oclType) or n.oclIsKindOf(self.oclType)&#xA;then ns.getNamesOfMember(self)->intersection(ns.getNamesOfMember(n))->isEmpty()&#xA;else true&#xA;endif"/>
          </eAnnotations>
          <eParameters name="n" ordered="false" lowerBound="1" eType="#//core/constructs/NamedElement"/>
          <eParameters name="ns" ordered="false" lowerBound="1" eType="#//core/constructs/Namespace"/>
        </eOperations>
        <eOperations name="separator" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/String">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query separator() gives the string that is used to separate names when constructing a qualified name.&#xA;result = '::'"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = '::'"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="qualifiedName" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/String">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="When there is a name, and all of the containing namespaces have a name, the qualified name is constructed from the names of the containing namespaces.&#xA;result = if self.name->notEmpty() and self.allNamespaces()->select(ns | ns.name->isEmpty())->isEmpty()&#xA;then &#xA;    self.allNamespaces()->iterate( ns : Namespace; result: String = self.name | ns.name->union(self.separator())->union(result))&#xA;else&#xA;    Set{}&#xA;endif"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = if self.name->notEmpty() and self.allNamespaces()->select(ns | ns.name->isEmpty())->isEmpty()&#xA;then &#xA;    self.allNamespaces()->iterate( ns : Namespace; result: String = self.name | ns.name->union(self.separator())->union(result))&#xA;else&#xA;    Set{}&#xA;endif"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" ordered="false"
            eType="#//core/primitiveTypes/String">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The name of the NamedElement."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="visibility" ordered="false"
            eType="#//core/constructs/VisibilityKind">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Determines where the NamedElement appears within different Namespaces within the overall model, and its accessibility."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="namespace" ordered="false"
            eType="#//core/constructs/Namespace" changeable="false" volatile="true"
            derived="true" eOpposite="#//core/constructs/Namespace/ownedMember">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Specifies the namespace that owns the NamedElement."/>
          </eAnnotations>
          <eAnnotations source="subsets" references="#//core/constructs/Element/owner"/>
          <eAnnotations source="union"/>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="qualifiedName" ordered="false"
            eType="#//core/primitiveTypes/String" changeable="false" volatile="true"
            derived="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A name which allows the NamedElement to be identified within a hierarchy of nested Namespaces. It is constructed from the names of the containing namespaces starting at the root of the hierarchy and ending with the name of the NamedElement itself."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Element" abstract="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="An element is a constituent of a model. As such, it has the capability of owning other elements."/>
        </eAnnotations>
        <eOperations name="notOwnSelf" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="not self.allOwnedElements()->includes(self)"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="An element may not directly or indirectly own itself.&#xA;not self.allOwnedElements()->includes(self)"/>
          </eAnnotations>
          <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
          </eParameters>
          <eParameters name="context">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="hasOwner" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="self.mustBeOwned() implies owner->notEmpty()"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Elements that must be owned must have an owner.&#xA;self.mustBeOwned() implies owner->notEmpty()"/>
          </eAnnotations>
          <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
          </eParameters>
          <eParameters name="context">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="allOwnedElements" ordered="false" upperBound="-1" eType="#//core/constructs/Element">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query allOwnedElements() gives all of the direct and indirect owned elements of an element.&#xA;result = ownedElement->union(ownedElement->collect(e | e.allOwnedElements()))"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = ownedElement->union(ownedElement->collect(e | e.allOwnedElements()))"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="mustBeOwned" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/Boolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query mustBeOwned() indicates whether elements of this type must have an owner. Subclasses of Element that do not require an owner must override this operation.&#xA;result = true"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = true"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="ownedElement" ordered="false"
            upperBound="-1" eType="#//core/constructs/Element" changeable="false"
            volatile="true" derived="true" eOpposite="#//core/constructs/Element/owner">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The Elements owned by this element."/>
          </eAnnotations>
          <eAnnotations source="union"/>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="owner" ordered="false"
            eType="#//core/constructs/Element" changeable="false" volatile="true"
            derived="true" eOpposite="#//core/constructs/Element/ownedElement">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The Element that owns this element."/>
          </eAnnotations>
          <eAnnotations source="union"/>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="ownedComment" ordered="false"
            upperBound="-1" eType="#//core/constructs/Comment" containment="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The Comments owned by this element."/>
          </eAnnotations>
          <eAnnotations source="subsets" references="#//core/constructs/Element/ownedElement"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Comment" eSuperTypes="#//core/constructs/Element">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A comment is a textual annotation that can be attached to a set of elements."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="body" ordered="false"
            eType="#//core/primitiveTypes/String">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Specifies a string that is the comment."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="annotatedElement" ordered="false"
            upperBound="-1" eType="#//core/constructs/Element">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="References the Element(s) being commented."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EEnum" name="VisibilityKind">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="VisibilityKind is an enumeration type that defines literals to determine the visibility of elements in a model."/>
        </eAnnotations>
        <eLiterals name="public">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A public element is visible to all elements that can access the contents of the namespace that owns it."/>
          </eAnnotations>
        </eLiterals>
        <eLiterals name="private" value="1">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A private element is only visible inside the namespace that owns it."/>
          </eAnnotations>
        </eLiterals>
        <eLiterals name="protected" value="2">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A protected element is visible to elements that have a generalization relationship to the namespace that owns it."/>
          </eAnnotations>
        </eLiterals>
        <eLiterals name="package" value="3">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A package element is owned by a namespace that is not a package, and is visible to elements that are in the same package as its owning namespace. Only named elements that are not owned by packages can be marked as having package visibility.  Any element marked as having package visibility is visible to all elements within the nearest enclosing package (given that other owning elements have proper visibility).  Outside the nearest enclosing package, an element marked as having package visibility is not visible."/>
          </eAnnotations>
        </eLiterals>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="PackageableElement" abstract="true"
          eSuperTypes="#//core/constructs/NamedElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A packageable element indicates a named element that may be owned directly by a package."/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ElementImport" eSuperTypes="#//core/constructs/DirectedRelationship">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="An element import identifies an element in another package, and allows the element to be referenced using its name without a qualifier."/>
        </eAnnotations>
        <eOperations name="visibilityPublicOrPrivate" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="self.visibility = #public or self.visibility = #private"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The visibility of an ElementImport is either public or private.&#xA;self.visibility = #public or self.visibility = #private"/>
          </eAnnotations>
          <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
          </eParameters>
          <eParameters name="context">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="importedElementIsPublic" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="self.importedElement.visibility.notEmpty() implies self.importedElement.visibility = #public"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="An importedElement has either public visibility or no visibility at all.&#xA;self.importedElement.visibility.notEmpty() implies self.importedElement.visibility = #public"/>
          </eAnnotations>
          <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
          </eParameters>
          <eParameters name="context">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="getName" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/String">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query getName() returns the name under which the imported PackageableElement will be known in the importing namespace.&#xA;result = if self.alias->notEmpty() then &#xA;  self.alias&#xA;else&#xA;  self.importedElement.name&#xA;endif"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = if self.alias->notEmpty() then &#xA;  self.alias&#xA;else&#xA;  self.importedElement.name&#xA;endif"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="visibility" ordered="false"
            lowerBound="1" eType="#//core/constructs/VisibilityKind" defaultValueLiteral="public">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Specifies the visibility of the imported PackageableElement within the importing Package. The default visibility is the same as that of the imported element. If the imported element does not have a visibility, it is possible to add visibility to the element import."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="alias" ordered="false"
            eType="#//core/primitiveTypes/String">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Specifies the name that should be added to the namespace of the importing package in lieu of the name of the imported packagable element. The aliased name must not clash with any other member name in the importing package. By default, no alias is used."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="importedElement" ordered="false"
            lowerBound="1" eType="#//core/constructs/PackageableElement">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Specifies the PackageableElement whose name is to be added to a Namespace."/>
          </eAnnotations>
          <eAnnotations source="subsets" references="#//core/constructs/DirectedRelationship/target"/>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="importingNamespace"
            ordered="false" lowerBound="1" eType="#//core/constructs/Namespace" eOpposite="#//core/constructs/Namespace/elementImport">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Specifies the Namespace that imports a PackageableElement from another Package."/>
          </eAnnotations>
          <eAnnotations source="subsets" references="#//core/constructs/DirectedRelationship/source #//core/constructs/Element/owner"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="DirectedRelationship" abstract="true"
          eSuperTypes="#//core/constructs/Relationship">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A directed relationship represents a relationship between a collection of source model elements and a collection of target model elements."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="source" ordered="false"
            lowerBound="1" upperBound="-1" eType="#//core/constructs/Element" changeable="false"
            volatile="true" derived="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Specifies the sources of the DirectedRelationship."/>
          </eAnnotations>
          <eAnnotations source="subsets" references="#//core/constructs/Relationship/relatedElement"/>
          <eAnnotations source="union"/>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="target" ordered="false"
            lowerBound="1" upperBound="-1" eType="#//core/constructs/Element" changeable="false"
            volatile="true" derived="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Specifies the targets of the DirectedRelationship."/>
          </eAnnotations>
          <eAnnotations source="subsets" references="#//core/constructs/Relationship/relatedElement"/>
          <eAnnotations source="union"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Relationship" abstract="true" eSuperTypes="#//core/constructs/Element">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Relationship is an abstract concept that specifies some kind of relationship between elements."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="relatedElement" ordered="false"
            lowerBound="1" upperBound="-1" eType="#//core/constructs/Element" changeable="false"
            volatile="true" derived="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Specifies the elements related by the Relationship."/>
          </eAnnotations>
          <eAnnotations source="union"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="PackageImport" eSuperTypes="#//core/constructs/DirectedRelationship">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A package import is a relationship that allows the use of unqualified names to refer to package members from other namespaces."/>
        </eAnnotations>
        <eOperations name="publicOrPrivate" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="self.visibility = #public or self.visibility = #private"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The visibility of a PackageImport is either public or private.&#xA;self.visibility = #public or self.visibility = #private"/>
          </eAnnotations>
          <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
          </eParameters>
          <eParameters name="context">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="visibility" ordered="false"
            lowerBound="1" eType="#//core/constructs/VisibilityKind" defaultValueLiteral="public">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Specifies the visibility of the imported PackageableElements within the importing Namespace, i.e., whether imported elements will in turn be visible to other packages that use that importingPackage as an importedPackage. If the PackageImport is public, the imported elements will be visible outside the package, while if it is private they will not."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="importedPackage" ordered="false"
            lowerBound="1" eType="#//core/constructs/Package">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Specifies the Package whose members are imported into a Namespace."/>
          </eAnnotations>
          <eAnnotations source="subsets" references="#//core/constructs/DirectedRelationship/target"/>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="importingNamespace"
            ordered="false" lowerBound="1" eType="#//core/constructs/Namespace" eOpposite="#//core/constructs/Namespace/packageImport">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Specifies the Namespace that imports the members from a Package."/>
          </eAnnotations>
          <eAnnotations source="subsets" references="#//core/constructs/DirectedRelationship/source #//core/constructs/Element/owner"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Package" eSuperTypes="#//core/constructs/Namespace #//core/constructs/PackageableElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A package is used to group elements, and provides a namespace for the grouped elements."/>
        </eAnnotations>
        <eAnnotations source="duplicates">
          <contents xsi:type="ecore:EOperation" name="mustBeOwned" ordered="false"
              lowerBound="1" eType="#//core/primitiveTypes/Boolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The query mustBeOwned() indicates whether elements of this type must have an owner.&#xA;result = false"/>
            </eAnnotations>
            <eAnnotations source="redefines" references="#//core/constructs/Element/mustBeOwned"/>
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="result = false"/>
            </eAnnotations>
          </contents>
        </eAnnotations>
        <eOperations name="elementsPublicOrPrivate" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="self.ownedElements->forAll(e | e.visibility->notEmpty() implies e.visbility = #public or e.visibility = #private)"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="If an element that is owned by a package has visibility, it is public or private.&#xA;self.ownedElements->forAll(e | e.visibility->notEmpty() implies e.visbility = #public or e.visibility = #private)"/>
          </eAnnotations>
          <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
          </eParameters>
          <eParameters name="context">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="visibleMembers" ordered="false" upperBound="-1" eType="#//core/constructs/PackageableElement">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query visibleMembers() defines which members of a Package can be accessed outside it.&#xA;result = member->select( m | self.makesVisible(m))"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = member->select( m | self.makesVisible(m))"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="makesVisible" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/Boolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query makesVisible() defines whether a Package makes an element visible outside itself. Elements with no visibility and elements with public visibility are made visible.&#xA;self.member->includes(el)&#xA;result = (ownedMember->includes(el)) or&#xA;   (elementImport->&#xA;      select(ei|ei.visibility = #public)->&#xA;         collect(ei|ei.importedElement)->includes(el)) or&#xA;   (packageImport->&#xA;      select(pi|pi.visibility = #public)->&#xA;        collect(pi|&#xA;           pi.importedPackage.member->includes(el))->notEmpty())"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = (ownedMember->includes(el)) or&#xA;   (elementImport->&#xA;      select(ei|ei.visibility = #public)->&#xA;         collect(ei|ei.importedElement)->includes(el)) or&#xA;   (packageImport->&#xA;      select(pi|pi.visibility = #public)->&#xA;        collect(pi|&#xA;           pi.importedPackage.member->includes(el))->notEmpty())"/>
          </eAnnotations>
          <eParameters name="el" ordered="false" lowerBound="1" eType="#//core/constructs/NamedElement"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="packagedElement" ordered="false"
            upperBound="-1" eType="#//core/constructs/PackageableElement" containment="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Specifies the packageable elements that are owned by this Package."/>
          </eAnnotations>
          <eAnnotations source="subsets" references="#//core/constructs/Namespace/ownedMember"/>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="ownedType" ordered="false"
            upperBound="-1" eType="#//core/constructs/Type" volatile="true" derived="true"
            eOpposite="#//core/constructs/Type/package">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="References the packaged elements that are Types."/>
          </eAnnotations>
          <eAnnotations source="subsets" references="#//core/constructs/Package/packagedElement"/>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="nestedPackage" ordered="false"
            upperBound="-1" eType="#//core/constructs/Package" volatile="true" derived="true"
            eOpposite="#//core/constructs/Package/nestingPackage">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="References the packaged elements that are Packages."/>
          </eAnnotations>
          <eAnnotations source="subsets" references="#//core/constructs/Package/packagedElement"/>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="nestingPackage" ordered="false"
            eType="#//core/constructs/Package" volatile="true" derived="true" eOpposite="#//core/constructs/Package/nestedPackage">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="References the Package that owns this Package."/>
          </eAnnotations>
          <eAnnotations source="subsets" references="#//core/constructs/NamedElement/namespace"/>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="packageMerge" ordered="false"
            upperBound="-1" eType="#//core/constructs/PackageMerge" containment="true"
            eOpposite="#//core/constructs/PackageMerge/receivingPackage">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="References the PackageMerges that are owned by this Package."/>
          </eAnnotations>
          <eAnnotations source="subsets" references="#//core/constructs/Element/ownedElement"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Type" abstract="true" eSuperTypes="#//core/constructs/NamedElement #//core/constructs/PackageableElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A type is a named element that is used as the type for a typed element. A type can be contained in a package."/>
        </eAnnotations>
        <eOperations name="conformsTo" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/Boolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query conformsTo() gives true for a type that conforms to another. By default, two types do not conform to each other. This query is intended to be redefined for specific conformance situations.&#xA;result = false"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = false"/>
          </eAnnotations>
          <eParameters name="other" ordered="false" lowerBound="1" eType="#//core/constructs/Type"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="package" ordered="false"
            eType="#//core/constructs/Package" volatile="true" derived="true" eOpposite="#//core/constructs/Package/ownedType">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Specifies the owning package of this classifier, if any."/>
          </eAnnotations>
          <eAnnotations source="subsets" references="#//core/constructs/NamedElement/namespace"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="PackageMerge" eSuperTypes="#//core/constructs/DirectedRelationship">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A package merge defines how the contents of one package are extended by the contents of another package."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="mergedPackage" ordered="false"
            lowerBound="1" eType="#//core/constructs/Package">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="References the Package that is to be merged with the receiving package of the PackageMerge."/>
          </eAnnotations>
          <eAnnotations source="subsets" references="#//core/constructs/DirectedRelationship/target"/>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="receivingPackage" ordered="false"
            lowerBound="1" eType="#//core/constructs/Package" eOpposite="#//core/constructs/Package/packageMerge">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="References the Package that is being extended with the contents of the merged package of the PackageMerge."/>
          </eAnnotations>
          <eAnnotations source="subsets" references="#//core/constructs/DirectedRelationship/source #//core/constructs/Element/owner"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Constraint" eSuperTypes="#//core/constructs/PackageableElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A constraint is a condition or restriction expressed in natural language text or in a machine readable language for the purpose of declaring some of the semantics of an element."/>
        </eAnnotations>
        <eOperations name="notApplyToSelf" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="not constrainedElement->includes(self)"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A constraint cannot be applied to itself.&#xA;not constrainedElement->includes(self)"/>
          </eAnnotations>
          <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
          </eParameters>
          <eParameters name="context">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="valueSpecificationBoolean" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="self.specification().booleanValue().isOclKindOf(Boolean)"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The value specification for a constraint must evaluate to a Boolean value.&#xA;self.specification().booleanValue().isOclKindOf(Boolean)"/>
          </eAnnotations>
          <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
          </eParameters>
          <eParameters name="context">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="constrainedElement"
            upperBound="-1" eType="#//core/constructs/Element">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The ordered set of Elements referenced by this Constraint."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="specification" ordered="false"
            lowerBound="1" eType="#//core/constructs/ValueSpecification" containment="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A condition that must be true when evaluated in order for the constraint to be satisfied."/>
          </eAnnotations>
          <eAnnotations source="subsets" references="#//core/constructs/Element/ownedElement"/>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="context" ordered="false"
            eType="#//core/constructs/Namespace" eOpposite="#//core/constructs/Namespace/ownedRule">
          <eAnnotations source="subsets" references="#//core/constructs/NamedElement/namespace"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ValueSpecification" abstract="true"
          eSuperTypes="#//core/constructs/TypedElement #//core/constructs/PackageableElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A value specification is the specification of a (possibly empty) set of instances, including both objects and data values."/>
        </eAnnotations>
        <eOperations name="isComputable" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/Boolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query isComputable() determines whether a value specification can be computed in a model. This operation cannot be fully defined in OCL. A conforming implementation is expected to deliver true for this operation for all value specifications that it can compute, and to compute all of those for which the operation is true. A conforming implementation is expected to be able to compute the value of all literals.&#xA;result = false"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = false"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="integerValue" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/Integer">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query integerValue() gives a single Integer value when one can be computed.&#xA;result = Set{}"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = Set{}"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="booleanValue" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/Boolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query booleanValue() gives a single Boolean value when one can be computed.&#xA;result = Set{}"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = Set{}"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="stringValue" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/String">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query stringValue() gives a single String value when one can be computed.&#xA;result = Set{}"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = Set{}"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="unlimitedValue" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/UnlimitedNatural">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query unlimitedValue() gives a single UnlimitedNatural value when one can be computed.&#xA;result = Set{}"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = Set{}"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="isNull" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/Boolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query isNull() returns true when it can be computed that the value is null.&#xA;result = false"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = false"/>
          </eAnnotations>
        </eOperations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="TypedElement" abstract="true" eSuperTypes="#//core/constructs/NamedElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A typed element is a kind of named element that represents an element with a type."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="type" ordered="false"
            eType="#//core/constructs/Type">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="This information is derived from the return result for this Operation."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Property" eSuperTypes="#//core/constructs/StructuralFeature">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A property is a structural feature of a classifier that characterizes instances of the classifier. A property related by ownedAttribute to a classifier (other than an association) represents an attribute and might also represent an association end. It relates an instance of the class to a value or set of values of the type of the attribute. A property related by memberEnd or its specializations to an association represents an end of the association. The type of the property is the type of the end of the association."/>
        </eAnnotations>
        <eAnnotations source="duplicates">
          <contents xsi:type="ecore:EOperation" name="isConsistentWith" ordered="false"
              lowerBound="1" eType="#//core/primitiveTypes/Boolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The query isConsistentWith() specifies, for any two Properties in a context in which redefinition is possible, whether redefinition would be logically consistent. A redefining property is consistent with a redefined property if the type of the redefining property conforms to the type of the redefined property, the multiplicity of the redefining property (if specified) is contained in the multiplicity of the redefined property, and the redefining property is derived if the redefined property is derived.&#xA;redefinee.isRedefinitionContextValid(self)&#xA;result = redefinee.oclIsKindOf(Property) and &#xA;  let prop : Property = redefinee.oclAsType(Property) in &#xA;  (prop.type.conformsTo(self.type) and &#xA;  ((prop.lowerBound()->notEmpty() and self.lowerBound()->notEmpty()) implies prop.lowerBound() >= self.lowerBound()) and &#xA;  ((prop.upperBound()->notEmpty() and self.upperBound()->notEmpty()) implies prop.lowerBound() &lt;= self.lowerBound()) and &#xA;  (self.isDerived implies prop.isDerived) and&#xA;  (self.isComposite implies prop.isComposite))"/>
            </eAnnotations>
            <eAnnotations source="redefines" references="#//core/constructs/RedefinableElement/isConsistentWith"/>
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="result = redefinee.oclIsKindOf(Property) and &#xA;  let prop : Property = redefinee.oclAsType(Property) in &#xA;  (prop.type.conformsTo(self.type) and &#xA;  ((prop.lowerBound()->notEmpty() and self.lowerBound()->notEmpty()) implies prop.lowerBound() >= self.lowerBound()) and &#xA;  ((prop.upperBound()->notEmpty() and self.upperBound()->notEmpty()) implies prop.lowerBound() &lt;= self.lowerBound()) and &#xA;  (self.isDerived implies prop.isDerived) and&#xA;  (self.isComposite implies prop.isComposite))"/>
            </eAnnotations>
            <eParameters name="redefinee" ordered="false" lowerBound="1" eType="#//core/constructs/RedefinableElement"/>
          </contents>
        </eAnnotations>
        <eOperations name="multiplicityOfComposite" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="isComposite implies (upperBound()->isEmpty() or upperBound() &lt;= 1)"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A multiplicity of a composite aggregation must not have an upper bound greater than 1.&#xA;isComposite implies (upperBound()->isEmpty() or upperBound() &lt;= 1)"/>
          </eAnnotations>
          <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
          </eParameters>
          <eParameters name="context">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="subsettingContextConforms" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="self.subsettedProperty->notEmpty() implies&#xA;  (self.subsettingContext()->notEmpty() and self.subsettingContext()->forAll (sc |&#xA;    self.subsettedProperty->forAll(sp |&#xA;      sp.subsettingContext()->exists(c | sc.conformsTo(c)))))"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Subsetting may only occur when the context of the subsetting property conforms to the context of the subsetted property.&#xA;self.subsettedProperty->notEmpty() implies&#xA;  (self.subsettingContext()->notEmpty() and self.subsettingContext()->forAll (sc |&#xA;    self.subsettedProperty->forAll(sp |&#xA;      sp.subsettingContext()->exists(c | sc.conformsTo(c)))))"/>
          </eAnnotations>
          <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
          </eParameters>
          <eParameters name="context">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="redefinedPropertyInherited" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="if (redefinedProperty->notEmpty()) then&#xA;  (redefinitionContext->notEmpty() and&#xA;      redefinedProperty->forAll(rp|&#xA;        ((redefinitionContext->collect(fc|&#xA;          fc.allParents()))->asSet())->collect(c| c.allFeatures())->asSet()->includes(rp))"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A redefined property must be inherited from a more general classifier containing the redefining property.&#xA;if (redefinedProperty->notEmpty()) then&#xA;  (redefinitionContext->notEmpty() and&#xA;      redefinedProperty->forAll(rp|&#xA;        ((redefinitionContext->collect(fc|&#xA;          fc.allParents()))->asSet())->collect(c| c.allFeatures())->asSet()->includes(rp))"/>
          </eAnnotations>
          <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
          </eParameters>
          <eParameters name="context">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="subsettingRules" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="self.subsettedProperty->forAll(sp |&#xA;  self.type.conformsTo(sp.type) and&#xA;    ((self.upperBound()->notEmpty() and sp.upperBound()->notEmpty()) implies&#xA;      self.upperBound()&lt;=sp.upperBound() ))"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A subsetting property may strengthen the type of the subsetted property, and its upper bound may be less.&#xA;self.subsettedProperty->forAll(sp |&#xA;  self.type.conformsTo(sp.type) and&#xA;    ((self.upperBound()->notEmpty() and sp.upperBound()->notEmpty()) implies&#xA;      self.upperBound()&lt;=sp.upperBound() ))"/>
          </eAnnotations>
          <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
          </eParameters>
          <eParameters name="context">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="navigableReadonly" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="isReadOnly implies isNavigable()"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Only a navigable property can be marked as readOnly.&#xA;isReadOnly implies isNavigable()"/>
          </eAnnotations>
          <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
          </eParameters>
          <eParameters name="context">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="derivedUnionIsDerived" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="isDerivedUnion implies isDerived"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A derived union is derived.&#xA;isDerivedUnion implies isDerived"/>
          </eAnnotations>
          <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
          </eParameters>
          <eParameters name="context">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="subsettedPropertyNames" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="true"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A property may not subset a property with the same name.&#xA;true"/>
          </eAnnotations>
          <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
          </eParameters>
          <eParameters name="context">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="opposite" ordered="false" lowerBound="1" eType="#//core/constructs/Property">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="If this property is owned by a class, associated with a binary association, and the other end of the association is also owned by a class, then opposite gives the other end.&#xA;result = if owningAssociation->isEmpty() and association.memberEnd->size() = 2&#xA;  then&#xA;    let otherEnd = (association.memberEnd - self)->any() in&#xA;      if otherEnd.owningAssociation->isEmpty() then otherEnd else Set{} endif&#xA;    else Set {}&#xA;    endif"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = if owningAssociation->isEmpty() and association.memberEnd->size() = 2&#xA;  then&#xA;    let otherEnd = (association.memberEnd - self)->any() in&#xA;      if otherEnd.owningAssociation->isEmpty() then otherEnd else Set{} endif&#xA;    else Set {}&#xA;    endif"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="subsettingContext" ordered="false" upperBound="-1" eType="#//core/constructs/Classifier">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query subsettingContext() gives the context for subsetting a property. It consists, in the case of an attribute, of the corresponding classifier, and in the case of an association end, all of the classifiers at the other ends.&#xA;result = if association->notEmpty()&#xA;then association.endType-type &#xA;else if classifier->notEmpty then Set{classifier} else Set{} endif&#xA;endif"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = if association->notEmpty()&#xA;then association.endType-type &#xA;else if classifier->notEmpty then Set{classifier} else Set{} endif&#xA;endif"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="isNavigable" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/Boolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query isNavigable() indicates whether it is possible to navigate across the property.&#xA;result = not classifier->isEmpty() or&#xA;association.owningAssociation.navigableOwnedEnd->includes(self)"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = not classifier->isEmpty() or&#xA;association.owningAssociation.navigableOwnedEnd->includes(self)"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="isAttribute" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/Boolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query isAttribute() is true if the Property is defined as an attribute of some classifier.&#xA;result = Classifier->allInstances->exists(c | c.attribute->includes(p))"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = Classifier->allInstances->exists(c | c.attribute->includes(p))"/>
          </eAnnotations>
          <eParameters name="p" ordered="false" lowerBound="1" eType="#//core/constructs/Property"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="isReadOnly" ordered="false"
            lowerBound="1" eType="#//core/primitiveTypes/Boolean" defaultValueLiteral="false">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="If isReadOnly is true, the attribute may not be written to after initialization."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="default" ordered="false"
            eType="#//core/primitiveTypes/String">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Specifies a String that represents a value to be used when no argument is supplied for the Property."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="isComposite" ordered="false"
            lowerBound="1" eType="#//core/primitiveTypes/Boolean" defaultValueLiteral="false">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="If isComposite is true, the object containing the attribute is a container for the object or value contained in the attribute."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="isDerived" ordered="false"
            lowerBound="1" eType="#//core/primitiveTypes/Boolean" defaultValueLiteral="false">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="If isDerived is true, the value of the attribute is derived from information elsewhere."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="isDerivedUnion" ordered="false"
            lowerBound="1" eType="#//core/primitiveTypes/Boolean" defaultValueLiteral="false">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Specifies whether the property is derived as the union of all of the properties that are constrained to subset it."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="class" ordered="false"
            eType="#//core/constructs/Class" eOpposite="#//core/constructs/Class/ownedAttribute">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="References the Class that owns the Property."/>
          </eAnnotations>
          <eAnnotations source="subsets" references="#//core/constructs/NamedElement/namespace #//core/constructs/Feature/featuringClassifier"/>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="datatype" ordered="false"
            eType="#//core/constructs/DataType" eOpposite="#//core/constructs/DataType/ownedAttribute">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The DataType that owns this Property."/>
          </eAnnotations>
          <eAnnotations source="subsets" references="#//core/constructs/NamedElement/namespace #//core/constructs/Feature/featuringClassifier"/>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="owningAssociation"
            ordered="false" eType="#//core/constructs/Association" eOpposite="#//core/constructs/Association/ownedEnd">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="References the owning association of this property, if any."/>
          </eAnnotations>
          <eAnnotations source="subsets" references="#//core/constructs/Property/association #//core/constructs/NamedElement/namespace #//core/constructs/Feature/featuringClassifier"/>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="association" ordered="false"
            eType="#//core/constructs/Association" eOpposite="#//core/constructs/Association/memberEnd">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="References the association of which this property is a member, if any."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="redefinedProperty"
            ordered="false" upperBound="-1" eType="#//core/constructs/Property">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="References the properties that are redefined by this property."/>
          </eAnnotations>
          <eAnnotations source="subsets" references="#//core/constructs/RedefinableElement/redefinedElement"/>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="subsettedProperty"
            ordered="false" upperBound="-1" eType="#//core/constructs/Property">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="References the properties of which this property is constrained to be a subset."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="opposite" ordered="false"
            eType="#//core/constructs/Property" volatile="true" derived="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="In the case where the property is one navigable end of a binary association with both ends navigable, this gives the other end."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="StructuralFeature" abstract="true"
          eSuperTypes="#//core/constructs/Feature #//core/constructs/TypedElement #//core/constructs/MultiplicityElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A structural feature is a typed feature of a classifier that specifies the structure of instances of the classifier."/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Feature" abstract="true" eSuperTypes="#//core/constructs/RedefinableElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A feature declares a behavioral or structural characteristic of instances of classifiers."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="featuringClassifier"
            ordered="false" upperBound="-1" eType="#//core/constructs/Classifier"
            changeable="false" volatile="true" derived="true" eOpposite="#//core/constructs/Classifier/feature">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The Classifiers that have this Feature as a feature."/>
          </eAnnotations>
          <eAnnotations source="union"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="RedefinableElement" abstract="true"
          eSuperTypes="#//core/constructs/NamedElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A redefinable element is an element that, when defined in the context of a classifier, can be redefined more specifically or differently in the context of another classifier that specializes (directly or indirectly) the context classifier."/>
        </eAnnotations>
        <eOperations name="redefinitionContextValid" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="self.redefinedElement->forAll(e | self.isRedefinitionContextValid(e))"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="At least one of the redefinition contexts of the redefining element must be a specialization of at least one of the redefinition contexts for each redefined element.&#xA;self.redefinedElement->forAll(e | self.isRedefinitionContextValid(e))"/>
          </eAnnotations>
          <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
          </eParameters>
          <eParameters name="context">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="redefinitionConsistent" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="self.redefinedElement->forAll(re | re.isConsistentWith(self))"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A redefining element must be consistent with each redefined element.&#xA;self.redefinedElement->forAll(re | re.isConsistentWith(self))"/>
          </eAnnotations>
          <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
          </eParameters>
          <eParameters name="context">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="nonLeafRedefinition" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="self.redefinedElement->forAll(not isLeaf)"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A redefinable element can only redefine non-leaf redefinable elements&#xA;self.redefinedElement->forAll(not isLeaf)"/>
          </eAnnotations>
          <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
          </eParameters>
          <eParameters name="context">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="isConsistentWith" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/Boolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query isConsistentWith() specifies, for any two RedefinableElements in a context in which redefinition is possible, whether redefinition would be logically consistent. By default, this is false; this operation must be overridden for subclasses of RedefinableElement to define the consistency conditions.&#xA;result = false&#xA;redefinee.isRedefinitionContextValid(self)"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = false"/>
          </eAnnotations>
          <eParameters name="redefinee" ordered="false" lowerBound="1" eType="#//core/constructs/RedefinableElement"/>
        </eOperations>
        <eOperations name="isRedefinitionContextValid" ordered="false" lowerBound="1"
            eType="#//core/primitiveTypes/Boolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query isRedefinitionContextValid() specifies whether the redefinition contexts of this RedefinableElement are properly related to the redefinition contexts of the specified RedefinableElement to allow this element to redefine the other. By default at least one of the redefinition contexts of this element must be a specialization of at least one of the redefinition contexts of the specified element.&#xA;result = self.redefinitionContext->exists(c | redefined.redefinitionContext->exists(r | c.allParents()->includes(r)))"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = self.redefinitionContext->exists(c | redefined.redefinitionContext->exists(r | c.allParents()->includes(r)))"/>
          </eAnnotations>
          <eParameters name="redefined" ordered="false" lowerBound="1" eType="#//core/constructs/RedefinableElement"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="redefinitionContext"
            ordered="false" upperBound="-1" eType="#//core/constructs/Classifier"
            changeable="false" volatile="true" derived="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="References the contexts that this element may be redefined from."/>
          </eAnnotations>
          <eAnnotations source="union"/>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="redefinedElement" ordered="false"
            upperBound="-1" eType="#//core/constructs/RedefinableElement" changeable="false"
            volatile="true" derived="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The redefinable element that is being redefined by this element."/>
          </eAnnotations>
          <eAnnotations source="union"/>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="isLeaf" ordered="false"
            lowerBound="1" eType="#//core/primitiveTypes/Boolean" defaultValueLiteral="false">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Indicates whether it is possible to further redefine a RedefinableElement. If the value is true, then it is not possible to further redefine the RedefinableElement. Note that this property is preserved through package merge operations; that is, the capability to redefine a RedefinableElement (i.e., isLeaf=false) must be preserved in the resulting RedefinableElement of a package merge operation where a RedefinableElement with isLeaf=false is merged with a matching RedefinableElement with isLeaf=true: the resulting RedefinableElement will have isLeaf=false. Default value is false."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="MultiplicityElement" abstract="true"
          eSuperTypes="#//core/constructs/Element">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A multiplicity is a definition of an inclusive interval of non-negative integers beginning with a lower bound and ending with a (possibly infinite) upper bound. A multiplicity element embeds this information to specify the allowable cardinalities for an instantiation of this element."/>
        </eAnnotations>
        <eOperations name="upperGeLower" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="(upperBound()->notEmpty() and lowerBound()->notEmpty()) implies upperBound() >= lowerBound()"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The upper bound must be greater than or equal to the lower bound.&#xA;(upperBound()->notEmpty() and lowerBound()->notEmpty()) implies upperBound() >= lowerBound()"/>
          </eAnnotations>
          <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
          </eParameters>
          <eParameters name="context">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="lowerGe0" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="lowerBound()->notEmpty() implies lowerBound() >= 0"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The lower bound must be a non-negative integer literal.&#xA;lowerBound()->notEmpty() implies lowerBound() >= 0"/>
          </eAnnotations>
          <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
          </eParameters>
          <eParameters name="context">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="isMultivalued" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/Boolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query isMultivalued() checks whether this multiplicity has an upper bound greater than one.&#xA;upperBound()->notEmpty()&#xA;result = upperBound() > 1"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = upperBound() > 1"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="includesMultiplicity" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/Boolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query includesMultiplicity() checks whether this multiplicity includes all the cardinalities allowed by the specified multiplicity.&#xA;self.upperBound()->notEmpty() and self.lowerBound()->notEmpty() and M.upperBound()->notEmpty() and M.lowerBound()->notEmpty()&#xA;result = (self.lowerBound() &lt;= M.lowerBound()) and (self.upperBound() >= M.upperBound())"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = (self.lowerBound() &lt;= M.lowerBound()) and (self.upperBound() >= M.upperBound())"/>
          </eAnnotations>
          <eParameters name="m" ordered="false" lowerBound="1" eType="#//core/constructs/MultiplicityElement"/>
        </eOperations>
        <eOperations name="includesCardinality" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/Boolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query includesCardinality() checks whether the specified cardinality is valid for this multiplicity.&#xA;upperBound()->notEmpty() and lowerBound()->notEmpty()&#xA;result = (lowerBound() &lt;= C) and (upperBound() >= C)"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = (lowerBound() &lt;= C) and (upperBound() >= C)"/>
          </eAnnotations>
          <eParameters name="c" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/Integer"/>
        </eOperations>
        <eOperations name="lowerBound" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/Integer">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query lowerBound() returns the lower bound of the multiplicity as an integer.&#xA;result = if lower->notEmpty() then lower else 1 endif"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = if lower->notEmpty() then lower else 1 endif"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="upperBound" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/UnlimitedNatural">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query upperBound() returns the upper bound of the multiplicity for a bounded multiplicity as an unlimited natural.&#xA;result = if upper->notEmpty() then upper else 1 endif"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = if upper->notEmpty() then upper else 1 endif"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="isOrdered" ordered="false"
            lowerBound="1" eType="#//core/primitiveTypes/Boolean" defaultValueLiteral="false">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="For a multivalued multiplicity, this attribute specifies whether the values in an instantiation of this element are sequentially ordered."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="isUnique" ordered="false"
            lowerBound="1" eType="#//core/primitiveTypes/Boolean" defaultValueLiteral="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="For a multivalued multiplicity, this attributes specifies whether the values in an instantiation of this element are unique."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="lower" ordered="false"
            eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"
            defaultValueLiteral="1">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Specifies the lower bound of the multiplicity interval."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="upper" ordered="false"
            eType="#//core/primitiveTypes/UnlimitedNatural" defaultValueLiteral="1">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Specifies the upper bound of the multiplicity interval."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Class" eSuperTypes="#//core/constructs/Classifier">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A class describes a set of objects that share the same specifications of features, constraints, and semantics."/>
        </eAnnotations>
        <eAnnotations source="duplicates">
          <contents xsi:type="ecore:EOperation" name="inherit" ordered="false" upperBound="-1"
              eType="#//core/constructs/NamedElement">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The inherit operation is overridden to exclude redefined properties.&#xA;result = inhs->excluding(inh | ownedMember->select(oclIsKindOf(RedefinableElement))->select(redefinedElement->includes(inh)))"/>
            </eAnnotations>
            <eAnnotations source="redefines" references="#//core/constructs/Classifier/inherit"/>
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="result = inhs->excluding(inh | ownedMember->select(oclIsKindOf(RedefinableElement))->select(redefinedElement->includes(inh)))"/>
            </eAnnotations>
            <eParameters name="inhs" ordered="false" upperBound="-1" eType="#//core/constructs/NamedElement"/>
          </contents>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="isAbstract" ordered="false"
            lowerBound="1" eType="#//core/primitiveTypes/Boolean" defaultValueLiteral="false">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="True when a class is abstract."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="ownedOperation" upperBound="-1"
            eType="#//core/constructs/Operation" containment="true" eOpposite="#//core/constructs/Operation/class">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The operations owned by the class."/>
          </eAnnotations>
          <eAnnotations source="subsets" references="#//core/constructs/Classifier/feature #//core/constructs/Namespace/ownedMember"/>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="superClass" ordered="false"
            upperBound="-1" eType="#//core/constructs/Class">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="This gives the superclasses of a class."/>
          </eAnnotations>
          <eAnnotations source="redefines" references="#//core/constructs/Classifier/general.1"/>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="ownedAttribute" upperBound="-1"
            eType="#//core/constructs/Property" containment="true" eOpposite="#//core/constructs/Property/class">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The attributes (i.e. the properties) owned by the class."/>
          </eAnnotations>
          <eAnnotations source="subsets" references="#//core/constructs/Classifier/attribute #//core/constructs/Namespace/ownedMember"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Operation" eSuperTypes="#//core/constructs/BehavioralFeature">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="An operation is a behavioral feature of a classifier that specifies the name, type, parameters, and constraints for invoking an associated behavior."/>
        </eAnnotations>
        <eAnnotations source="duplicates">
          <contents xsi:type="ecore:EOperation" name="isConsistentWith" ordered="false"
              lowerBound="1" eType="#//core/primitiveTypes/Boolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The query isConsistentWith() specifies, for any two Operations in a context in which redefinition is possible, whether redefinition would be consistent in the sense of maintaining type covariance. Other senses of consistency may be required, for example to determine consistency in the sense of contravariance. Users may define alternative queries under names different from 'isConsistentWith()', as for example, users may define a query named 'isContravariantWith()'.&#xA;redefinee.isRedefinitionContextValid(self)&#xA;result = (redefinee.oclIsKindOf(Operation) and&#xD;&#xA;let op: Operation = redefinee.oclAsType(Operation) in&#xD;&#xA;self.ownedParameter.size() = op.ownedParameter.size() and&#xD;&#xA;forAll(i | op.ownedParameter[i].type.conformsTo(self.ownedParameter[i].type))&#xD;&#xA;)"/>
            </eAnnotations>
            <eAnnotations source="redefines" references="#//core/constructs/RedefinableElement/isConsistentWith"/>
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="result = (redefinee.oclIsKindOf(Operation) and&#xD;&#xA;let op: Operation = redefinee.oclAsType(Operation) in&#xD;&#xA;self.ownedParameter.size() = op.ownedParameter.size() and&#xD;&#xA;forAll(i | op.ownedParameter[i].type.conformsTo(self.ownedParameter[i].type))&#xD;&#xA;)"/>
            </eAnnotations>
            <eParameters name="redefinee" ordered="false" lowerBound="1" eType="#//core/constructs/RedefinableElement"/>
          </contents>
          <contents xsi:type="ecore:EReference" name="ownedParameter" upperBound="-1"
              eType="#//core/constructs/Parameter" containment="true" eOpposite="#//core/constructs/Parameter/operation">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="Specifies the ordered set of formal parameters of this BehavioralFeature."/>
            </eAnnotations>
            <eAnnotations source="redefines" references="#//core/constructs/BehavioralFeature/ownedParameter"/>
          </contents>
          <contents xsi:type="ecore:EReference" name="raisedException" ordered="false"
              upperBound="-1" eType="#//core/constructs/Type">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="References the Types representing exceptions that may be raised during an invocation of this operation."/>
            </eAnnotations>
            <eAnnotations source="redefines" references="#//core/constructs/BehavioralFeature/raisedException"/>
          </contents>
        </eAnnotations>
        <eOperations name="onlyBodyForQuery" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="bodyCondition->notEmpty() implies isQuery"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="A bodyCondition can only be specified for a query operation.&#xA;bodyCondition->notEmpty() implies isQuery"/>
          </eAnnotations>
          <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
          </eParameters>
          <eParameters name="context">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="atMostOneReturn" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="self.ownedParameter->select(par | par.direction = #return)->size() &lt;= 1"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="An operation can have at most one return parameter; i.e., an owned parameter with the direction set to 'return'&#xA;self.ownedParameter->select(par | par.direction = #return)->size() &lt;= 1"/>
          </eAnnotations>
          <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
          </eParameters>
          <eParameters name="context">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="isOrdered" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/Boolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="If this operation has a return parameter, isOrdered equals the value of isOrdered for that parameter. Otherwise isOrdered is false.&#xA;result = if returnResult->size() = 1 then returnResult->any().isOrdered else false endif"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = if returnResult->size() = 1 then returnResult->any().isOrdered else false endif"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="isUnique" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/Boolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="If this operation has a return parameter, isUnique equals the value of isUnique for that parameter. Otherwise isUnique is true.&#xA;result = if returnResult->size() = 1 then returnResult->any().isUnique else true endif"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = if returnResult->size() = 1 then returnResult->any().isUnique else true endif"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="lower" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/Integer">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="If this operation has a return parameter, lower equals the value of lower for that parameter. Otherwise lower is not defined.&#xA;result = if returnResult->size() = 1 then returnResult->any().lower else Set{} endif"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = if returnResult->size() = 1 then returnResult->any().lower else Set{} endif"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="upper" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/UnlimitedNatural">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="If this operation has a return parameter, upper equals the value of upper for that parameter. Otherwise upper is not defined.&#xA;result = if returnResult->size() = 1 then returnResult->any().upper else Set{} endif"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = if returnResult->size() = 1 then returnResult->any().upper else Set{} endif"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="type" ordered="false" lowerBound="1" eType="#//core/constructs/Type">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="If this operation has a return parameter, type equals the value of type for that parameter. Otherwise type is not defined.&#xA;result = if returnResult->size() = 1 then returnResult->any().type else Set{} endif"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = if returnResult->size() = 1 then returnResult->any().type else Set{} endif"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="returnResult" ordered="false" upperBound="-1" eType="#//core/constructs/Parameter">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="result = ownedParameter->select (par | par.direction = #return)"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = ownedParameter->select (par | par.direction = #return)"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="isQuery" ordered="false"
            lowerBound="1" eType="#//core/primitiveTypes/Boolean" defaultValueLiteral="false">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Specifies whether an execution of the BehavioralFeature leaves the state of the system unchanged (isQuery=true) or whether side effects may occur (isQuery=false)."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="isOrdered" ordered="false"
            lowerBound="1" eType="#//core/primitiveTypes/Boolean" volatile="true"
            defaultValueLiteral="false" derived="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="This information is derived from the return result for this Operation."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="isUnique" ordered="false"
            lowerBound="1" eType="#//core/primitiveTypes/Boolean" volatile="true"
            defaultValueLiteral="true" derived="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="This information is derived from the return result for this Operation."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="lower" ordered="false"
            eType="#//core/primitiveTypes/Integer" volatile="true" defaultValueLiteral="1"
            derived="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="This information is derived from the return result for this Operation."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="upper" ordered="false"
            eType="#//core/primitiveTypes/UnlimitedNatural" volatile="true" defaultValueLiteral="1"
            derived="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="This information is derived from the return result for this Operation."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="datatype" ordered="false"
            eType="#//core/constructs/DataType" eOpposite="#//core/constructs/DataType/ownedOperation">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The DataType that owns this Operation."/>
          </eAnnotations>
          <eAnnotations source="subsets" references="#//core/constructs/RedefinableElement/redefinitionContext #//core/constructs/NamedElement/namespace #//core/constructs/Feature/featuringClassifier"/>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="redefinedOperation"
            ordered="false" upperBound="-1" eType="#//core/constructs/Operation">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="References the Operations that are redefined by this Operation."/>
          </eAnnotations>
          <eAnnotations source="subsets" references="#//core/constructs/RedefinableElement/redefinedElement"/>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="type" ordered="false"
            eType="#//core/constructs/Type" volatile="true" derived="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="This information is derived from the return result for this Operation."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="precondition" ordered="false"
            upperBound="-1" eType="#//core/constructs/Constraint">
          <eAnnotations source="subsets" references="#//core/constructs/Namespace/ownedRule"/>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="postcondition" ordered="false"
            upperBound="-1" eType="#//core/constructs/Constraint">
          <eAnnotations source="subsets" references="#//core/constructs/Namespace/ownedRule"/>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="bodyCondition" ordered="false"
            eType="#//core/constructs/Constraint">
          <eAnnotations source="subsets" references="#//core/constructs/Namespace/ownedRule"/>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="class" ordered="false"
            eType="#//core/constructs/Class" eOpposite="#//core/constructs/Class/ownedOperation">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The class that owns the operation."/>
          </eAnnotations>
          <eAnnotations source="subsets" references="#//core/constructs/RedefinableElement/redefinitionContext #//core/constructs/NamedElement/namespace #//core/constructs/Feature/featuringClassifier"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="BehavioralFeature" abstract="true"
          eSuperTypes="#//core/constructs/Namespace #//core/constructs/Feature">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A behavioral feature is a feature of a classifier that specifies an aspect of the behavior of its instances."/>
        </eAnnotations>
        <eAnnotations source="duplicates">
          <contents xsi:type="ecore:EOperation" name="isDistinguishableFrom" ordered="false"
              lowerBound="1" eType="#//core/primitiveTypes/Boolean">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The query isDistinguishableFrom() determines whether two BehavioralFeatures may coexist in the same Namespace. It specifies that they have to have different signatures.&#xA;result = if n.oclIsKindOf(BehavioralFeature)&#xA;then&#xA;  if ns.getNamesOfMember(self)->intersection(ns.getNamesOfMember(n))->notEmpty()&#xA;  then Set{}->include(self)->include(n)->isUnique( bf | bf.parameter->collect(type))&#xA;  else true&#xA;  endif&#xA;else true&#xA;endif"/>
            </eAnnotations>
            <eAnnotations source="redefines" references="#//core/constructs/NamedElement/isDistinguishableFrom"/>
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="result = if n.oclIsKindOf(BehavioralFeature)&#xA;then&#xA;  if ns.getNamesOfMember(self)->intersection(ns.getNamesOfMember(n))->notEmpty()&#xA;  then Set{}->include(self)->include(n)->isUnique( bf | bf.parameter->collect(type))&#xA;  else true&#xA;  endif&#xA;else true&#xA;endif"/>
            </eAnnotations>
            <eParameters name="n" ordered="false" lowerBound="1" eType="#//core/constructs/NamedElement"/>
            <eParameters name="ns" ordered="false" lowerBound="1" eType="#//core/constructs/Namespace"/>
          </contents>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="ownedParameter" upperBound="-1"
            eType="#//core/constructs/Parameter" containment="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Specifies the ordered set of formal parameters of this BehavioralFeature."/>
          </eAnnotations>
          <eAnnotations source="subsets" references="#//core/constructs/Namespace/ownedMember"/>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="raisedException" ordered="false"
            upperBound="-1" eType="#//core/constructs/Type">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="References the Types representing exceptions that may be raised during an invocation of this feature."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Parameter" eSuperTypes="#//core/constructs/TypedElement #//core/constructs/MultiplicityElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A parameter is a specification of an argument used to pass information into or out of an invocation of a behavioral feature."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="default" ordered="false"
            eType="#//core/primitiveTypes/String">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Specifies a String that represents a value to be used when no argument is supplied for the Parameter."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="direction" ordered="false"
            lowerBound="1" eType="#//core/constructs/ParameterDirectionKind" defaultValueLiteral="in">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Indicates whether a parameter is being sent into or out of a behavioral element."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="operation" ordered="false"
            eType="#//core/constructs/Operation" changeable="false" volatile="true"
            transient="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="References the Operation owning this parameter."/>
          </eAnnotations>
          <eAnnotations source="subsets" references="#//core/constructs/NamedElement/namespace"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EEnum" name="ParameterDirectionKind">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Parameter direction kind is an enumeration type that defines literals used to specify direction of parameters."/>
        </eAnnotations>
        <eLiterals name="in">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Indicates that parameter values are passed into the behavioral element by the caller."/>
          </eAnnotations>
        </eLiterals>
        <eLiterals name="inout" value="1">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Indicates that parameter values are passed into a behavioral element by the caller and then back out to the caller from the behavioral element."/>
          </eAnnotations>
        </eLiterals>
        <eLiterals name="out" value="2">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Indicates that parameter values are passed from a behavioral element out to the caller."/>
          </eAnnotations>
        </eLiterals>
        <eLiterals name="return" value="3">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Indicates that parameter values are passed as return values from a behavioral element back to the caller."/>
          </eAnnotations>
        </eLiterals>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="DataType" eSuperTypes="#//core/constructs/Classifier">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A data type is a type whose instances are identified only by their value. A data type may contain attributes to support the modeling of structured data types."/>
        </eAnnotations>
        <eAnnotations source="duplicates">
          <contents xsi:type="ecore:EOperation" name="inherit" ordered="false" upperBound="-1"
              eType="#//core/constructs/NamedElement">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The inherit operation is overridden to exclude redefined properties.&#xA;result = inhs->excluding(inh | ownedMember->select(oclIsKindOf(RedefinableElement))->select(redefinedElement->includes(inh)))"/>
            </eAnnotations>
            <eAnnotations source="redefines" references="#//core/constructs/Classifier/inherit"/>
            <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
              <details key="body" value="result = inhs->excluding(inh | ownedMember->select(oclIsKindOf(RedefinableElement))->select(redefinedElement->includes(inh)))"/>
            </eAnnotations>
            <eParameters name="inhs" ordered="false" upperBound="-1" eType="#//core/constructs/NamedElement"/>
          </contents>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="ownedAttribute" upperBound="-1"
            eType="#//core/constructs/Property" containment="true" eOpposite="#//core/constructs/Property/datatype">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The Attributes owned by the DataType."/>
          </eAnnotations>
          <eAnnotations source="subsets" references="#//core/constructs/Classifier/attribute #//core/constructs/Namespace/ownedMember"/>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="ownedOperation" upperBound="-1"
            eType="#//core/constructs/Operation" containment="true" eOpposite="#//core/constructs/Operation/datatype">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The Operations owned by the DataType."/>
          </eAnnotations>
          <eAnnotations source="subsets" references="#//core/constructs/Classifier/feature #//core/constructs/Namespace/ownedMember"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Association" eSuperTypes="#//core/constructs/Classifier #//core/constructs/Relationship">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="An association describes a set of tuples whose values refer to typed instances. An instance of an association is called a link.A link is a tuple with one value for each end of the association, where each value is an instance of the type of the end."/>
        </eAnnotations>
        <eOperations name="associationEnds" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="if memberEnd->size() > 2 then ownedEnd->includesAll(memberEnd)"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Association ends of associations with more than two ends must be owned by the association.&#xA;if memberEnd->size() > 2 then ownedEnd->includesAll(memberEnd)"/>
          </eAnnotations>
          <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
          </eParameters>
          <eParameters name="context">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="binaryAssociations" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="self.memberEnd->exists(isComposite) implies self.memberEnd->size() = 2"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Only binary associations can be aggregations.&#xA;self.memberEnd->exists(isComposite) implies self.memberEnd->size() = 2"/>
          </eAnnotations>
          <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
          </eParameters>
          <eParameters name="context">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="specializedEndNumber" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="parents()->select(oclIsKindOf(Association)).oclAsType(Association)->forAll(p | p.memberEnd->size() = self.memberEnd->size())"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="An association specializing another association has the same number of ends as the other association.&#xA;parents()->select(oclIsKindOf(Association)).oclAsType(Association)->forAll(p | p.memberEnd->size() = self.memberEnd->size())"/>
          </eAnnotations>
          <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
          </eParameters>
          <eParameters name="context">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="specializedEndTypes" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="Sequence{1..self.memberEnd->size()}->&#xD;&#xA;&#x9;forAll(i | self.general->select(oclIsKindOf(Association)).oclAsType(Association)->&#xD;&#xA;&#x9;&#x9;forAll(ga |self.memberEnd->at(i).type.conformsTo(ga.memberEnd->at(i).type)))"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="When an association specializes another association, every end of the specific association corresponds to an end of the general association, and the specific end reaches the same type or a subtype of the more general end.&#xA;Sequence{1..self.memberEnd->size()}->&#xD;&#xA;&#x9;forAll(i | self.general->select(oclIsKindOf(Association)).oclAsType(Association)->&#xD;&#xA;&#x9;&#x9;forAll(ga |self.memberEnd->at(i).type.conformsTo(ga.memberEnd->at(i).type)))"/>
          </eAnnotations>
          <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
          </eParameters>
          <eParameters name="context">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations name="endType" upperBound="-1" eType="#//core/constructs/Type">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="endType is derived from the types of the member ends.&#xA;result = self.memberEnd->collect(e | e.type)"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = self.memberEnd->collect(e | e.type)"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="isDerived" ordered="false"
            lowerBound="1" eType="#//core/primitiveTypes/Boolean" defaultValueLiteral="false">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Specifies whether the association is derived from other model elements such as other associations or constraints."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="endType" ordered="false"
            lowerBound="1" upperBound="-1" eType="#//core/constructs/Type" changeable="false"
            volatile="true" derived="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="References the classifiers that are used as types of the ends of the association."/>
          </eAnnotations>
          <eAnnotations source="subsets" references="#//core/constructs/Relationship/relatedElement"/>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="memberEnd" lowerBound="2"
            upperBound="-1" eType="#//core/constructs/Property" eOpposite="#//core/constructs/Property/association">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Each end represents participation of instances of the classifier connected to the end in links of the association."/>
          </eAnnotations>
          <eAnnotations source="subsets" references="#//core/constructs/Namespace/member"/>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="navigableOwnedEnd"
            ordered="false" upperBound="-1" eType="#//core/constructs/Property">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The navigable ends that are owned by the association itself."/>
          </eAnnotations>
          <eAnnotations source="subsets" references="#//core/constructs/Association/ownedEnd"/>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EReference" name="ownedEnd" upperBound="-1"
            eType="#//core/constructs/Property" containment="true" eOpposite="#//core/constructs/Property/owningAssociation">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The ends that are owned by the association itself."/>
          </eAnnotations>
          <eAnnotations source="subsets" references="#//core/constructs/Association/memberEnd #//core/constructs/Classifier/feature #//core/constructs/Namespace/ownedMember"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Enumeration" eSuperTypes="#//core/constructs/DataType">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="An enumeration is a data type whose values are enumerated in the model as enumeration literals."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="ownedLiteral" upperBound="-1"
            eType="#//core/constructs/EnumerationLiteral" containment="true" eOpposite="#//core/constructs/EnumerationLiteral/enumeration">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The ordered set of literals for this Enumeration."/>
          </eAnnotations>
          <eAnnotations source="subsets" references="#//core/constructs/Namespace/ownedMember"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="EnumerationLiteral" eSuperTypes="#//core/constructs/NamedElement">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="An enumeration literal is a user-defined data value for an enumeration."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="enumeration" ordered="false"
            eType="#//core/constructs/Enumeration" eOpposite="#//core/constructs/Enumeration/ownedLiteral">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The Enumeration that this EnumerationLiteral is a member of."/>
          </eAnnotations>
          <eAnnotations source="subsets" references="#//core/constructs/NamedElement/namespace"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="PrimitiveType" eSuperTypes="#//core/constructs/DataType">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A primitive type defines a predefined data type, without any relevant substructure (i.e., it has no parts in the context of UML). A primitive datatype may have an algebra and operations defined outside of UML, for example, mathematically."/>
        </eAnnotations>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="OpaqueExpression" eSuperTypes="#//core/constructs/ValueSpecification">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="An opaque expression is an uninterpreted textual statement that denotes a (possibly empty) set of values when evaluated in a context."/>
        </eAnnotations>
        <eOperations name="languageBodySize" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="language->notEmpty() implies (body->size() = language->size())"/>
          </eAnnotations>
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="If the language attribute is not empty, then the size of the body and language arrays must be the same.&#xA;language->notEmpty() implies (body->size() = language->size())"/>
          </eAnnotations>
          <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
          </eParameters>
          <eParameters name="context">
            <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
              <details key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="body" unique="false"
            upperBound="-1" eType="#//core/primitiveTypes/String">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The text of the expression, possibly in multiple languages."/>
          </eAnnotations>
        </eStructuralFeatures>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="language" upperBound="-1"
            eType="#//core/primitiveTypes/String">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Specifies the languages in which the expression is stated. The interpretation of the expression body depends on the languages. If the languages are unspecified, they might be implicit from the expression body or the context. Languages are matched to body strings by order."/>
          </eAnnotations>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Expression" eSuperTypes="#//core/constructs/ValueSpecification">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="An expression is a structured tree of symbols that denotes a (possibly empty) set of values when evaluated in a context."/>
        </eAnnotations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="operand" upperBound="-1"
            eType="#//core/constructs/ValueSpecification" containment="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="Specifies a sequence of operands."/>
          </eAnnotations>
          <eAnnotations source="subsets" references="#//core/constructs/Element/ownedElement"/>
        </eStructuralFeatures>
      </eClassifiers>
    </eSubpackages>
  </eSubpackages>
  <eSubpackages name="profiles" nsURI="http:///infrastructureLibrary/profiles.ecore"
      nsPrefix="infrastructureLibrary.profiles">
    <eClassifiers xsi:type="ecore:EClass" name="Stereotype" eSuperTypes="#//profiles/Class">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A stereotype defines how an existing metaclass may be extended, and enables the use of platform or domain specific terminology or notation in place of, or in addition to, the ones used for the extended metaclass."/>
      </eAnnotations>
      <eOperations name="nameNotClash" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
          <details key="body" value="true"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Stereotype names should not clash with keyword names for the extended model element.&#xA;true"/>
        </eAnnotations>
        <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
          </eAnnotations>
        </eParameters>
        <eParameters name="context">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The cache of context-specific information."/>
          </eAnnotations>
          <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
            <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
          </eGenericType>
        </eParameters>
      </eOperations>
      <eOperations name="generalize" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
          <details key="body" value="generalization.general->forAll(e |e.oclIsKindOf(Stereotype)) and generalization.specific->forAll(e | e.oclIsKindOf(Stereotype)) "/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A Stereotype may only generalize or specialize another Stereotype.&#xA;generalization.general->forAll(e |e.oclIsKindOf(Stereotype)) and generalization.specific->forAll(e | e.oclIsKindOf(Stereotype)) "/>
        </eAnnotations>
        <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
          </eAnnotations>
        </eParameters>
        <eParameters name="context">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The cache of context-specific information."/>
          </eAnnotations>
          <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
            <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
          </eGenericType>
        </eParameters>
      </eOperations>
      <eOperations name="containingProfile" ordered="false" lowerBound="1" eType="#//profiles/Profile">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The query containingProfile returns the closest profile directly or indirectly containing this stereotype.&#xA;result = self.namespace.oclAsType(Package).containingProfile()"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
          <details key="body" value="result = self.namespace.oclAsType(Package).containingProfile()"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="profile" ordered="false" lowerBound="1" eType="#//profiles/Profile">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="A stereotype must be contained, directly or indirectly, in a profile.&#xA;result = self.containingProfile()"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
          <details key="body" value="result = self.containingProfile()"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="icon" ordered="false"
          upperBound="-1" eType="#//profiles/Image" containment="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Stereotype can change the graphical appearance of the extended model element by using attached icons. When this association is not null, it references the location of the icon content to be displayed within diagrams presenting the extended model elements.&#xA;The profile that directly or indirectly contains this stereotype."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="profile" ordered="false"
          lowerBound="1" eType="#//profiles/Profile" volatile="true" derived="true"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Class" eSuperTypes="#//core/constructs/Classifier">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Class has derived association that indicates how it may be extended through one or more stereotypes. Stereotype is the only kind of metaclass that cannot be extended by stereotypes."/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="extension" ordered="false"
          upperBound="-1" eType="#//profiles/Extension" changeable="false" volatile="true"
          derived="true" eOpposite="#//profiles/Extension/metaclass.1">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="References the Extensions that specify additional properties of the metaclass. The property is derived from the extensions whose memberEnds are typed by the Class."/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Extension" eSuperTypes="#//core/constructs/Association">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="An extension is used to indicate that the properties of a metaclass are extended through a stereotype, and gives the ability to flexibly add (and later remove) stereotypes to classes."/>
      </eAnnotations>
      <eAnnotations source="duplicates">
        <contents xsi:type="ecore:EReference" name="ownedEnd" upperBound="-1" eType="#//profiles/ExtensionEnd"
            containment="true">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="References the end of the extension that is typed by a Stereotype."/>
          </eAnnotations>
          <eAnnotations source="redefines" references="#//core/constructs/Association/ownedEnd"/>
        </contents>
      </eAnnotations>
      <eOperations name="nonOwnedEnd" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
          <details key="body" value="metaclassEnd()->notEmpty() and metaclass()->oclIsKindOf(Class)"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The non-owned end of an Extension is typed by a Class.&#xA;metaclassEnd()->notEmpty() and metaclass()->oclIsKindOf(Class)"/>
        </eAnnotations>
        <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
          </eAnnotations>
        </eParameters>
        <eParameters name="context">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The cache of context-specific information."/>
          </eAnnotations>
          <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
            <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
          </eGenericType>
        </eParameters>
      </eOperations>
      <eOperations name="isBinary" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
          <details key="body" value="memberEnd->size() = 2"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="An Extension is binary, i.e., it has only two memberEnds.&#xA;memberEnd->size() = 2"/>
        </eAnnotations>
        <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
          </eAnnotations>
        </eParameters>
        <eParameters name="context">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The cache of context-specific information."/>
          </eAnnotations>
          <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
            <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
          </eGenericType>
        </eParameters>
      </eOperations>
      <eOperations name="metaclassEnd" ordered="false" lowerBound="1" eType="#//core/constructs/Property">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The query metaclassEnd() returns the Property that is typed by a metaclass (as opposed to a stereotype).&#xA;result = memberEnd->reject(ownedEnd)"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
          <details key="body" value="result = memberEnd->reject(ownedEnd)"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="metaclass" ordered="false" lowerBound="1" eType="#//profiles/Class">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The query metaclass() returns the metaclass that is being extended (as opposed to the extending stereotype).&#xA;result = metaclassEnd().type"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
          <details key="body" value="result = metaclassEnd().type"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="isRequired" ordered="false" lowerBound="1" eType="#//core/primitiveTypes/Boolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The query isRequired() is true if the owned end has a multiplicity with the lower bound of 1.&#xA;result = (ownedEnd->lowerBound() = 1)"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
          <details key="body" value="result = (ownedEnd->lowerBound() = 1)"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="isRequired" ordered="false"
          lowerBound="1" eType="#//core/primitiveTypes/Boolean" changeable="false"
          volatile="true" defaultValueLiteral="false" derived="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Indicates whether an instance of the extending stereotype must be created when an instance of the extended class is created. The attribute value is derived from the value of the lower property of the ExtensionEnd referenced by Extension::ownedEnd; a lower value of 1 means that isRequired is true, but otherwise it is false. Since the default value of ExtensionEnd::lower is 0, the default value of isRequired is false."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="metaclass" ordered="false"
          lowerBound="1" eType="#//profiles/Class" changeable="false" volatile="true"
          derived="true" eOpposite="#//profiles/Class/extension">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="References the Class that is extended through an Extension. The property is derived from the type of the memberEnd that is not the ownedEnd."/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ExtensionEnd" eSuperTypes="#//core/constructs/Property">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="An extension end is used to tie an extension to a stereotype when extending a metaclass."/>
      </eAnnotations>
      <eAnnotations source="duplicates">
        <contents xsi:type="ecore:EOperation" name="lowerBound" ordered="false" lowerBound="1"
            eType="#//core/primitiveTypes/Integer">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The query lowerBound() returns the lower bound of the multiplicity as an Integer. This is a redefinition of the default&#xD;&#xA;lower bound, which normally, for MultiplicityElements, evaluates to 1 if empty.&#xA;result = lowerBound = if lowerValue->isEmpty() then 0 else lowerValue->IntegerValue() endif"/>
          </eAnnotations>
          <eAnnotations source="redefines" references="#//core/constructs/MultiplicityElement/lowerBound"/>
          <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
            <details key="body" value="result = lowerBound = if lowerValue->isEmpty() then 0 else lowerValue->IntegerValue() endif"/>
          </eAnnotations>
        </contents>
        <contents xsi:type="ecore:EReference" name="type" ordered="false" eType="#//core/constructs/Type">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="References the type of the ExtensionEnd. Note that this association restricts the possible types of an ExtensionEnd to only be Stereotypes."/>
          </eAnnotations>
          <eAnnotations source="redefines" references="#//core/constructs/TypedElement/type"/>
        </contents>
        <contents xsi:type="ecore:EAttribute" name="lower" ordered="false" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"
            defaultValueLiteral="0">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="This redefinition changes the default multiplicity of association ends, since model elements are usually extended by 0 or 1 instance of the extension stereotype."/>
          </eAnnotations>
          <eAnnotations source="redefines" references="#//core/constructs/MultiplicityElement/lower"/>
        </contents>
      </eAnnotations>
      <eOperations name="multiplicity" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
          <details key="body" value="(self->lowerBound() = 0 or self->lowerBound() = 1) and self->upperBound() = 1"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The multiplicity of ExtensionEnd is 0..1 or 1.&#xA;(self->lowerBound() = 0 or self->lowerBound() = 1) and self->upperBound() = 1"/>
        </eAnnotations>
        <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
          </eAnnotations>
        </eParameters>
        <eParameters name="context">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The cache of context-specific information."/>
          </eAnnotations>
          <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
            <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
          </eGenericType>
        </eParameters>
      </eOperations>
      <eOperations name="aggregation" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
          <details key="body" value="self.aggregation = #composite"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The aggregation of an ExtensionEnd is composite.&#xA;self.aggregation = #composite"/>
        </eAnnotations>
        <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
          </eAnnotations>
        </eParameters>
        <eParameters name="context">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The cache of context-specific information."/>
          </eAnnotations>
          <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
            <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
          </eGenericType>
        </eParameters>
      </eOperations>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Image" eSuperTypes="#//core/constructs/Element">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Physical definition of a graphical image."/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="content" ordered="false"
          eType="#//core/primitiveTypes/String">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This contains the serialization of the image according to the format. The value could represent a bitmap, image such as a GIF file, or drawing 'instructions' using a standard such as Scalable Vector Graphic (SVG) (which is XML based)."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="location" ordered="false"
          eType="#//core/primitiveTypes/String">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This contains a location that can be used by a tool to locate the image as an alternative to embedding it in the stereotype."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="format" ordered="false"
          eType="#//core/primitiveTypes/String">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="This indicates the format of the content - which is how the string content should be interpreted. The following values are reserved: SVG, GIF, PNG, JPG, WMF, EMF, BMP.&#xD;&#xA;&#xD;&#xA;In addition the prefix 'MIME: ' is also reserved. This option can be used as an alternative to express the reserved values above, for example &quot;SVG&quot; could instead be expressed as &quot;MIME: image/svg+xml&quot;."/>
        </eAnnotations>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Profile" eSuperTypes="#//profiles/Package">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A profile defines limited extensions to a reference metamodel with the purpose of adapting the metamodel to a specific platform or domain."/>
      </eAnnotations>
      <eOperations name="metaclassReferenceNotSpecialized" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
          <details key="body" value="self.metaclassReference.importedElement->&#xD;&#xA;&#x9;select(c | c.oclIsKindOf(Classifier) and&#xD;&#xA;&#x9;&#x9;(c.generalization.namespace = self or&#x9;c.specialization.namespace = self))->isEmpty()"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="An element imported as a metaclassReference is not specialized or generalized in a Profile.&#xA;self.metaclassReference.importedElement->&#xD;&#xA;&#x9;select(c | c.oclIsKindOf(Classifier) and&#xD;&#xA;&#x9;&#x9;(c.generalization.namespace = self or&#x9;c.specialization.namespace = self))->isEmpty()"/>
        </eAnnotations>
        <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
          </eAnnotations>
        </eParameters>
        <eParameters name="context">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The cache of context-specific information."/>
          </eAnnotations>
          <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
            <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
          </eGenericType>
        </eParameters>
      </eOperations>
      <eOperations name="referencesSameMetamodel" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
          <details key="body" value="self.metamodelReference.importedPackage.elementImport.importedElement.allOwningPackages()->&#xD;&#xA;  union(self.metaclassReference.importedElement.allOwningPackages() )->notEmpty()"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="All elements imported either as metaclassReferences or through metamodelReferences are members of the same base reference metamodel.&#xA;self.metamodelReference.importedPackage.elementImport.importedElement.allOwningPackages()->&#xD;&#xA;  union(self.metaclassReference.importedElement.allOwningPackages() )->notEmpty()"/>
        </eAnnotations>
        <eParameters name="diagnostics" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
          </eAnnotations>
        </eParameters>
        <eParameters name="context">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="documentation" value="The cache of context-specific information."/>
          </eAnnotations>
          <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EMap">
            <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
            <eTypeArguments eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
          </eGenericType>
        </eParameters>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="metaclassReference" ordered="false"
          upperBound="-1" eType="#//core/constructs/ElementImport">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="References a metaclass that may be extended."/>
        </eAnnotations>
        <eAnnotations source="subsets" references="#//core/constructs/Namespace/elementImport"/>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="metamodelReference" ordered="false"
          upperBound="-1" eType="#//core/constructs/PackageImport">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="References a package containing (directly or indirectly) metaclasses that may be extended."/>
        </eAnnotations>
        <eAnnotations source="subsets" references="#//core/constructs/Namespace/packageImport"/>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Package" eSuperTypes="#//core/constructs/Namespace">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A package can have one or more profile applications to indicate which profiles have been applied. Because a profile is a package, it is possible to apply a profile not only to packages, but also to profiles."/>
      </eAnnotations>
      <eOperations name="allApplicableStereotypes" ordered="false" upperBound="-1"
          eType="#//profiles/Stereotype">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The query allApplicableStereotypes() returns all the directly or indirectly owned stereotypes, including stereotypes contained in sub-profiles.&#xA;result = &#xD;&#xA;self.ownedStereotype->union(self.ownedMember->&#xD;&#xA;&#x9;select(oclIsKindOf(Package)).oclAsType(Package).allApplicableStereotypes()->flatten())->asSet()"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
          <details key="body" value="result = &#xD;&#xA;self.ownedStereotype->union(self.ownedMember->&#xD;&#xA;&#x9;select(oclIsKindOf(Package)).oclAsType(Package).allApplicableStereotypes()->flatten())->asSet()"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="containingProfile" ordered="false" eType="#//profiles/Profile">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The query containingProfile() returns the closest profile directly or indirectly containing this package (or this package itself, if it is a profile).&#xA;result =&#xD;&#xA;if self.oclIsKindOf(Profile) then &#xD;&#xA;&#x9;self.oclAsType(Profile)&#xD;&#xA;else&#xD;&#xA;&#x9;self.namespace.oclAsType(Package).containingProfile()&#xD;&#xA;endif"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
          <details key="body" value="result =&#xD;&#xA;if self.oclIsKindOf(Profile) then &#xD;&#xA;&#x9;self.oclAsType(Profile)&#xD;&#xA;else&#xD;&#xA;&#x9;self.namespace.oclAsType(Package).containingProfile()&#xD;&#xA;endif"/>
        </eAnnotations>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="profileApplication" ordered="false"
          upperBound="-1" eType="#//profiles/ProfileApplication" containment="true"
          eOpposite="#//profiles/ProfileApplication/applyingPackage">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="References the ProfileApplications that indicate which profiles have been applied to the Package."/>
        </eAnnotations>
        <eAnnotations source="subsets" references="#//core/constructs/Element/ownedElement"/>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="ownedStereotype" ordered="false"
          upperBound="-1" eType="#//profiles/Stereotype" volatile="true" derived="true">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="References the Stereotypes that are owned by the Package"/>
        </eAnnotations>
        <eAnnotations source="subsets" references="#//core/constructs/Package/packagedElement"/>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ProfileApplication" eSuperTypes="#//core/constructs/DirectedRelationship">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A profile application is used to show which profiles have been applied to a package."/>
      </eAnnotations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="appliedProfile" ordered="false"
          lowerBound="1" eType="#//profiles/Profile">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="References the Profiles that are applied to a Package through this ProfileApplication."/>
        </eAnnotations>
        <eAnnotations source="subsets" references="#//core/constructs/DirectedRelationship/target"/>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="isStrict" ordered="false"
          lowerBound="1" eType="#//core/primitiveTypes/Boolean" defaultValueLiteral="false">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="Specifies that the Profile filtering rules for the metaclasses of the referenced metamodel shall be strictly applied."/>
        </eAnnotations>
      </eStructuralFeatures>
      <eStructuralFeatures xsi:type="ecore:EReference" name="applyingPackage" ordered="false"
          lowerBound="1" eType="#//profiles/Package" eOpposite="#//profiles/Package/profileApplication">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The package that owns the profile application."/>
        </eAnnotations>
        <eAnnotations source="subsets" references="#//core/constructs/DirectedRelationship/source #//core/constructs/Element/owner"/>
      </eStructuralFeatures>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="NamedElement" abstract="true">
      <eOperations name="allOwningPackages" ordered="false" upperBound="-1" eType="#//profiles/Package">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="documentation" value="The query allOwningPackages() returns all the directly or indirectly owning packages.&#xA;result = self.namespace->select(p | p.oclIsKindOf(Package))->union(p.allOwningPackages())"/>
        </eAnnotations>
        <eAnnotations source="http://www.eclipse.org/uml2/1.1.0/GenModel">
          <details key="body" value="result = self.namespace->select(p | p.oclIsKindOf(Package))->union(p.allOwningPackages())"/>
        </eAnnotations>
      </eOperations>
    </eClassifiers>
  </eSubpackages>
</ecore:EPackage>
